diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..f288702
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    <program>  Copyright (C) <year>  <name of author>
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<https://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<https://www.gnu.org/licenses/why-not-lgpl.html>.
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..3e3d870
--- /dev/null
+++ b/README.md
@@ -0,0 +1,40 @@
+# Aladin Lite
+**An astronomical HiPS visualizer in the browser** <img src="aladin-logo.png" alt="Aladin Lite logo" width="220">
+
+Aladin Lite is a Web application which enables HiPS visualization from the browser. It is developed at [CDS, Strasbourg astronomical data center](http://cds.unistra.fr/).
+
+See [A&A 578, A114 (2015)](https://arxiv.org/abs/1505.02291) and [IVOA HiPS Recommendation](http://ivoa.net/documents/HiPS/index.html) for more details about the HiPS standard.
+
+Aladin Lite is built to be easily embeddable in any web page. It powers astronomical portals like [ESASky](https://almascience.eso.org/asax/), [ESO Science Archive portal](http://archive.eso.org/scienceportal/) and [ALMA Portal](https://almascience.eso.org/asax/).
+
+More details on [Aladin Lite documentation page](http://aladin.u-strasbg.fr/AladinLite/doc/).
+
+## Source code
+
+Source code is available in the ``src`` directory.
+
+## Licence
+
+Aladin Lite is currently licensed under GPL v3.0
+
+If you think this license might prevent you from using Aladin Lite in your pages/application/portal, please open an issue or [contact us](mailto:cds-question@unistra.fr)
+
+## Building the application
+
+1. Clone the repository
+2. Go to the ``scripts``directory
+3. Open the `build.sh` file and adapt paths to ``uglifyjs`` and ``lessc``
+4. Launch ``./build.sh``
+5. Go to directory ``../distrib/latest/`` , type ``python3 -m http.server 42195`` and open your browser at [http://0.0.0.0:42195/](http://0.0.0.0:42195/) to launch the built application
+
+
+## Contributing
+
+There are several ways to contribute to Aladin Lite:
+
+- **report a bug**: anyone is welcome to open an issue to report a bug. Please make sure first the issue does not exist yet. Be as specific as possible, and provide if possible detailed instructions about how to reproduce the problem.
+
+- **suggest a new feature**: if you feel something is missing, check first if a similar feature request has not already been submitted in the open issues. If not, open a new issue, and give a detailed explanation of the feature you wish.
+
+- **develop new features/provide code fixing bugs**. As open development is a new thing for us, we will in a first time only take into consideration code contribution (_i.e._ Pull Requests) from our close partners.
+In any case, please get in touch before starting a major update or rewrite.
diff --git a/aladin-logo.png b/aladin-logo.png
new file mode 100644
index 0000000..0e7d95a
Binary files /dev/null and b/aladin-logo.png differ
diff --git a/assets/aladin-logo.gif b/assets/aladin-logo.gif
new file mode 100644
index 0000000..d0412e3
Binary files /dev/null and b/assets/aladin-logo.gif differ
diff --git a/assets/check.png b/assets/check.png
new file mode 100644
index 0000000..c77822a
Binary files /dev/null and b/assets/check.png differ
diff --git a/assets/check.xcf b/assets/check.xcf
new file mode 100644
index 0000000..0659f57
Binary files /dev/null and b/assets/check.xcf differ
diff --git a/assets/chevron-down.svg b/assets/chevron-down.svg
new file mode 100644
index 0000000..bab0480
--- /dev/null
+++ b/assets/chevron-down.svg
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+
+<svg xmlns="http://www.w3.org/2000/svg"
+     xmlns:xlink="http://www.w3.org/1999/xlink" >
+
+    <polygon points="1,0,5,0,5,3,1,3"  fill="#000" /> 
+    <polygon points="7,0,9,0,9,3,7,3"  fill="#000" /> 
+    <polygon points="10,0,12,0,12,3,10,3"  fill="#000" /> 
+    <polygon points="13,0,15,0,15,3,13,3"  fill="#000" /> 
+
+    <polyline points="1,5,5,9"  stroke="#000" /> 
+    <polyline points="1,9,5,5"  stroke="#000" /> 
+    <line x1="7" y1="7" x2="15" y2="7" stroke="#000" stroke-width="2" />
+
+    <polyline points="1,11,5,15"  stroke="#000" /> 
+    <polyline points="1,15,5,11"  stroke="#000" /> 
+    <line x1="7" y1="13" x2="15" y2="13" stroke="#000" stroke-width="2" />
+
+</svg>
diff --git a/assets/goto.png b/assets/goto.png
new file mode 100644
index 0000000..6708a56
Binary files /dev/null and b/assets/goto.png differ
diff --git a/assets/link-icon.png b/assets/link-icon.png
new file mode 100644
index 0000000..6e3e07e
Binary files /dev/null and b/assets/link-icon.png differ
diff --git a/assets/logo-stack-catalog.svg b/assets/logo-stack-catalog.svg
new file mode 100644
index 0000000..bab0480
--- /dev/null
+++ b/assets/logo-stack-catalog.svg
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+
+<svg xmlns="http://www.w3.org/2000/svg"
+     xmlns:xlink="http://www.w3.org/1999/xlink" >
+
+    <polygon points="1,0,5,0,5,3,1,3"  fill="#000" /> 
+    <polygon points="7,0,9,0,9,3,7,3"  fill="#000" /> 
+    <polygon points="10,0,12,0,12,3,10,3"  fill="#000" /> 
+    <polygon points="13,0,15,0,15,3,13,3"  fill="#000" /> 
+
+    <polyline points="1,5,5,9"  stroke="#000" /> 
+    <polyline points="1,9,5,5"  stroke="#000" /> 
+    <line x1="7" y1="7" x2="15" y2="7" stroke="#000" stroke-width="2" />
+
+    <polyline points="1,11,5,15"  stroke="#000" /> 
+    <polyline points="1,15,5,11"  stroke="#000" /> 
+    <line x1="7" y1="13" x2="15" y2="13" stroke="#000" stroke-width="2" />
+
+</svg>
diff --git a/assets/logo-stack-moc.svg b/assets/logo-stack-moc.svg
new file mode 100644
index 0000000..e1fe3b6
--- /dev/null
+++ b/assets/logo-stack-moc.svg
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+
+<svg xmlns="http://www.w3.org/2000/svg"
+     xmlns:xlink="http://www.w3.org/1999/xlink" >
+
+    <polyline points="0,7,2,7,2,5,7,5,7,3,10,3,10,5,13,5,13,7,15,7,15,9,13,9,13,12,10,12,10,14,7,14,7,12,2,12,2,10,0,10,0,7" stroke-width="1" stroke="#000" fill="transparent" /> 
+
+    <line x1="1" y1="10" x2="6" y2="5" stroke="#000" stroke-width="0.5" />
+    <line x1="2" y1="12" x2="10" y2="4" stroke="#000" stroke-width="0.5" />
+    <line x1="5" y1="12" x2="12" y2="5" stroke="#000" stroke-width="0.5" />
+    <line x1="7" y1="13" x2="13" y2="7" stroke="#000" stroke-width="0.5" />
+    <line x1="10" y1="13" x2="13" y2="10" stroke="#000" stroke-width="0.5" />
+</svg>
diff --git a/assets/logo-stack-overlay.svg b/assets/logo-stack-overlay.svg
new file mode 100644
index 0000000..94ffc9a
--- /dev/null
+++ b/assets/logo-stack-overlay.svg
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+
+<svg xmlns="http://www.w3.org/2000/svg"
+     xmlns:xlink="http://www.w3.org/1999/xlink">
+
+    <polygon points="10,5,10,1,14,1,14,14,2,14,2,9,6,9,6,5" fill="transparent" stroke="#000" stroke-width="2"/> 
+
+</svg>
diff --git a/assets/maximize.gif b/assets/maximize.gif
new file mode 100644
index 0000000..5072817
Binary files /dev/null and b/assets/maximize.gif differ
diff --git a/assets/new-aladin-logo.png b/assets/new-aladin-logo.png
new file mode 100644
index 0000000..e8cca61
Binary files /dev/null and b/assets/new-aladin-logo.png differ
diff --git a/assets/restore.gif b/assets/restore.gif
new file mode 100644
index 0000000..ee2185a
Binary files /dev/null and b/assets/restore.gif differ
diff --git a/assets/simbad-pointer-icon.png b/assets/simbad-pointer-icon.png
new file mode 100644
index 0000000..9dadbd2
Binary files /dev/null and b/assets/simbad-pointer-icon.png differ
diff --git a/assets/stack-logo-small.gif b/assets/stack-logo-small.gif
new file mode 100644
index 0000000..6a65afc
Binary files /dev/null and b/assets/stack-logo-small.gif differ
diff --git a/assets/stack-logo.gif b/assets/stack-logo.gif
new file mode 100644
index 0000000..5f4c61e
Binary files /dev/null and b/assets/stack-logo.gif differ
diff --git a/release-notes.txt b/release-notes.txt
new file mode 100644
index 0000000..2859530
--- /dev/null
+++ b/release-notes.txt
@@ -0,0 +1,217 @@
+2020-07
+- new method stopAnimation
+
+2020-06
+- new method in Catalog layer to *remove* individual *Source* objects
+
+2019-10
+- displayFITS can now take a base64 data URL as input
+
+2019-05-03
+- https URLs for Simbad pointer
+
+2019-04-30
+- empty Downloader queue when changing displayed HiPs
+
+2019-02-06
+- bug fix: MOC cells at order 0 were not displayed
+
+2019-01
+- add method getViewWCS
+
+2018-10-30
+- bug fix affichage MOC order>11
+
+2018-09-24
+- bug fix in VOTable parsing: CDATA text was always blank in <TD></TD>
+
+2018-09-18
+- drawing algorith improved: no more flickering when zooming in
+
+2018-09-17
+- improvement on mobile device: pinch zoom works, panning works better
+
+2018-08-30
+- URL generated for a VizieR cone search now take into account the option 'limit', as to limit the size of the retrieved VOTable
+
+2018-06-11
+- Bug fix for rectangular selection of sources (aladin.on('select', ...  )
+
+2018-05-16
+- Add variable View.CALLBACKS_THROTTLE_TIME_MS to control minimal time between two callbacks
+
+2018-05-14
+- HTTPS support for Logger
+
+2018-04-20
+- partially fix the all-sky view (the cells borders were visible) --> delta in method HpxImageSurvey.drawOneTile2
+- add option showAllskyRing
+- all-sky is shown at orders 3 and 4
+
+2018-04
+- Add method zoomToFoV (zoom with animation)
+- doc : ajout Tour navigator library dans Plugins
+
+2018-01-09
+- Add option simbadPointer
+
+2018-01-08
+- Add option realFullscreen
+
+2017-12-20
+- Catalog.onClick can now also be a function
+
+2017-12-14
+- add function udpateShape for Catalog and ProgressiveCatalog object
+- ajout shape 'circle' pour les catalogues
+- bug fix: les cats progressifs ne s'affichaient pas quand on était zoomé et qu'on ne bougeait pas
+
+2017-12-13
+- support Circle when generating footprints from STC-S descriptions
+
+2017-11-30
+- improve positionChanged listener: no more called when clicking on an object
+- improve object shown when clicking ; it's really the closest one now
+
+2017-11-24
+- add dragging attribute to positionChanged listener callback param
+
+2017-10-09
+- add listener for 'mouseMove' event
+
+2017-09-28
+- MOC display is way faster when panning
+- Sesame bug fix when used in a local file web page
+
+2017-09-27
+- bug fix : MOC display with norder>9 (thanks to Raffaele D'Abrusco)
+- improve MOC display speed
+
+2017-09-21:
+- add listener for 'click' event
+- dimensions can be specified for getViewDataURL method
+
+2017-09-08:
+- gotoObject: can now take a success callback function
+- improve AITOFF display
+
+2017-09-07:
+- improvement: MOCs, catalogs and overlays have now different logos in the "stack"
+
+2017-09-06:
+- fix: export PNG was not working any longer in latest version of Chrome, as top frame navigation to data URL was no longer allowed
+
+2017-08-28:
+- add J2000d option for frame selection
+
+2017-08-25:
+- all graphical overlays (footprints, MOCs) in addition to catalogs are now visible and can be shown/hidden from the control panel
+- add skyFraction method to MOC class
+- fix: when going full screen, background is now all white (no more HTML elements visible in the background)
+- style: layer labels in Overlay layers panel are rounded at both ends
+
+
+2017-08-24:
+- add adaptativeDisplay option for MOCs
+- try first to load MOC through given URL, and only if it fails, try through proxy (allows to load local/not publicly accessible MOCs)
+
+
+July 2017:
+- bug fix MOC
+- add method adjustFovForObject
+- add listeners on positionChanged zoomChanged
+- fix pour Andre Moitinho pour que Sesame fonctionne en HTTPS
+
+February 2017:
+- shape parameter when creating a catalogue can now be a custom draw function
+- bug fix, when superimposing a HiPS over a HiPS with a different coordinate frame
+
+January 2017:
+- added method to query SkyBot: A.catalogFromSkyBot
+
+October 2016:
+- 
+
+September 2016:
+- support of HiPS catalog (new format)
+
+
+June 2016:
+- fix astrometry offset by subdividing HEALPix cells too distorted
+- new method A.MOCFromJSON to create a MOC from the JSON serialization
+
+
+March 2016:
+- added raField and decField options when creating catalogue
+
+December 2015:
+- added cubehelix color map
+- added option in A.catalogFromURL to bypass proxy
+- access to Simbad and VizieR data (catalogFromVizieR and catalogFromSimbad) are now done directly, without the proxy
+
+Novembre 2015:
+- ajout méthodes getShareURL et getEmbedCode
+
+Octobre 2015:
+- ajout méthodes accès facile à Simbad, NED et VizieR
+- ajout onClick comme option de Catalog: 'showTable' ou 'showPopup'
+
+Octobre 2015:
+- nouvelle version de jquery mousewheel (ça déconnait un peu sous Mac avec la précedente)
+
+Décembre 2014:
+- ajout displayLabel pour afficher un label d'un overlay Catalog
+- ajout option lineWidth pour objet A.graphicOverlay
+- bug fix : la liste déroulante est mise à jour correctement quand on change de frame programmatiquement
+
+Novembre 2014:
+- ajout nouvelles formes pour les sources
+
+23 octobre 2014:
+- bug fix méthode on('objectClicked') était appelée de manière intempestive 
+quand la souris quittait le canvas
+
+21 octobre 2014:
+- ajout option shape (plus ou square) pour les catalogues
+
+20 octobre 2014:
+- amélioration on objectClicked et objectHivered. On envoie une valeur nulle pour signifier qu'on quitte l'objet
+- ajout méthode pour dessiner un cercle (A.circle)
+
+16 septembre 2014:
+- bug fix pour nouvelle version de Firefox. Aladin lite freezait. On ne crée plus les textures individuelles pour le allsky
+
+24 avril 2014 :
+Ajout dans API :
+- getSize
+- getFov
+- world2pix
+- pix2world
+- getFovCorners
+
+Novembre 2013:
+- ajout catalogues progressifs
+- ajout option pour fullScreen mode au démarrage
+- ajout méthode setFOVRange
+- polyfill pour Function.prototype.bind (pour Firefox < 4)
+
+Septembre 2013:
+- color maps
+
+Août 2013:
+- ajout page exemple full-screen.html
+- ajout bouton maximize in fullscreen
+- CSS dans fichier séparé
+- image réticule "cachée"
+- options pour personnaliser le réticule
+- revamped UI for layers
+- export PNG (nécessite support CORS)
+
+Juillet 2013 :
+- ajout boutons zoom
+- ajout sélection d'objets
+
+Fin 2013 :
+- ajout catalogue progressif
+- ajout on select, objectClicked, objectHovered
+
diff --git a/COPYING b/scripts/COPYING
similarity index 100%
rename from COPYING
rename to scripts/COPYING
diff --git a/scripts/build.sh b/scripts/build.sh
new file mode 100755
index 0000000..708c202
--- /dev/null
+++ b/scripts/build.sh
@@ -0,0 +1,93 @@
+#!/bin/bash
+
+# Script de concaténation et minification d'Aladin Lite 
+#
+#
+# Le résultat est créé dans le répertoire distrib
+# 
+# Pré-requis : 
+# - uglifyjs version 2 : https://github.com/mishoo/UglifyJS2
+#
+#
+
+scriptdir="$( cd "$( dirname "$0" )" && pwd )"
+srcdir=${scriptdir}/../src
+
+srctmpdir=/tmp/AL-src
+
+# create version number
+version=$(date --utc +%F)
+
+distribdir=${scriptdir}/../distrib/${version}
+
+if [ ! -d ${distribdir} ];
+then
+    mkdir ${distribdir}
+fi
+
+distribfile=${distribdir}/aladin.js
+distribfileminified=${distribdir}/aladin.min.js
+
+csssrcfile=${srcdir}/css/aladin.css
+cssfileminified=${distribdir}/aladin.min.css
+
+srctar=${distribdir}/AladinLiteSrc.tar
+
+uglifyjs="/home/boch/tools/node_modules/.bin/uglifyjs"
+lessc="/usr/bin/lessc"
+
+jsfiles=('js/cds.js' 'js/libs/json2.js' 'js/Logger.js' 'js/libs/jquery.mousewheel.js' 'js/libs/RequestAnimationFrame.js' 'js/libs/Stats.js' 'js/libs/healpix.min.js' 'js/libs/astro/astroMath.js' 'js/libs/astro/projection.js' 'js/libs/astro/coo.js' 'js/SimbadPointer.js' 'js/Box.js' 'js/CooConversion.js' 'js/Sesame.js' 'js/HealpixCache.js' 'js/Utils.js' 'js/URLBuilder.js' 'js/MeasurementTable.js' 'js/Color.js' 'js/AladinUtils.js' 'js/ProjectionEnum.js' 'js/CooFrameEnum.js' 'js/HiPSDefinition.js' 'js/Downloader.js' 'js/libs/fits.js' 'js/MOC.js' 'js/CooGrid.js' 'js/Footprint.js' 'js/Popup.js' 'js/Circle.js' 'js/Polyline.js' 'js/Overlay.js' 'js/Source.js' 'js/Catalog.js' 'js/ProgressiveCat.js' 'js/Tile.js' 'js/TileBuffer.js' 'js/ColorMap.js' 'js/HpxKey.js' 'js/HpxImageSurvey.js' 'js/HealpixGrid.js' 'js/Location.js' 'js/View.js' 'js/Aladin.js')
+
+cmd="cat "
+for t in "${jsfiles[@]}"
+do
+    cmd="${cmd} ${srcdir}/$t"
+done
+
+
+# version non minifiée
+cmd1="${cmd} | sed -e 's/{ALADIN-LITE-VERSION-NUMBER}/${version}/g' > ${distribfile}"
+eval ${cmd1}
+
+# version minifiée
+fileList=""
+for t in "${jsfiles[@]}"
+do
+    fileList="${fileList} ${srcdir}/$t"
+done
+cmd2="${uglifyjs} ${fileList} --comments -c -m |  sed -e 's/{ALADIN-LITE-VERSION-NUMBER}/${version}/g' > ${distribfileminified}"
+echo $cmd2
+eval ${cmd2}
+
+# traitement des CSS
+${lessc} --compress ${csssrcfile} > ${cssfileminified}
+
+cp ${csssrcfile} ${distribdir}
+
+# create AladinLiteSrc.tar.gz
+myVersion="AladinLite-${version}"
+echo $myVersion
+rm -r ${srctmpdir}
+mkdir ${srctmpdir}
+mkdir ${srctmpdir}/${myVersion}
+mkdir ${srctmpdir}/${myVersion}/src
+mkdir ${srctmpdir}/${myVersion}/src/js
+mkdir ${srctmpdir}/${myVersion}/src/css
+for t in "${jsfiles[@]}"
+do
+    cp ${srcdir}/$t ${srctmpdir}/${myVersion}/src/js
+done
+cp ${csssrcfile} ${srctmpdir}/${myVersion}/src/css
+cp minimal_build.sh ${srctmpdir}/${myVersion}/build.sh
+cp COPYING ${srctmpdir}/${myVersion}
+tar cvf ${srctar} -C ${srctmpdir} .
+gzip -f ${srctar}
+
+# update symbolic link pointing to latest release
+latest_symlink=${scriptdir}/../distrib/latest
+if [ -d ${latest_symlink} ];
+then
+    rm ${latest_symlink}
+fi
+
+ln -s ${distribdir} ${latest_symlink}
diff --git a/build.sh b/scripts/minimal_build.sh
similarity index 100%
rename from build.sh
rename to scripts/minimal_build.sh
diff --git a/scripts/testRelease.sh b/scripts/testRelease.sh
new file mode 100755
index 0000000..72541bd
--- /dev/null
+++ b/scripts/testRelease.sh
@@ -0,0 +1,7 @@
+#!/bin/bash
+
+# Lance Chromium avec une page Web permettant de tester la version de aladin dans distrib.latest
+
+cd .. && python3 -m http.server 42195 &
+
+chromium-browser http://0.0.0.0:42195/bug-tracking/test-latest-release.html
diff --git a/src/embed_test.html b/src/embed_test.html
new file mode 100644
index 0000000..10e863a
--- /dev/null
+++ b/src/embed_test.html
@@ -0,0 +1,33 @@
+<html>
+
+
+<body>
+
+
+<!-- you can skip this snippet if your page already integrates jQuery library -->
+<script type="text/javascript" src="../src/js/libs/jquery-1.9.1.min.js" charset="utf-8"></script>
+
+
+<!-- insert this snippet where you want Aladin Lite viewer to appear and after the loading of jQuery -->
+<div id="aladin-lite-div" style="width:500px;height:400px;"></div>
+<script type="text/javascript" src="../distrib/aladin-0.5.js" charset="utf-8"></script>
+<script type="text/javascript">
+    //var aladin = $.aladin('#aladin-lite-div', {survey: "P/2MASS/color", target: "M51", zoom: 0.3, catalogUrls: ['http://vizier.u-strasbg.fr/viz-bin/votable?-source=II/246/out&-c=13+29+52.55+%2B47+10+33.7&-out.add=_RAJ,_DEJ&-oc.form=dm&-out.meta=DhuL&-out.max=999999&-c.rm=15.8496666666666666', 'http://alasky.u-strasbg.fr/cgi/simbad-flat/simbad-cs.py?target=M51&SR=1.0&format=votable&SRUNIT=arcmin']});
+    //var aladin = $.aladin('#aladin-lite-div', {survey: "P/2MASS/color", target: "12:01:52.60 -18:50:54.4", zoom: 0.5, catalogUrls: ['http://vizier.u-strasbg.fr/viz-bin/votable?-source=II/246/out&-c=M51&-out.add=_RAJ,_DEJ&-oc.form=dm&-out.meta=DhuL&-out.max=999999&-c.rm=4.8496666666666666']});
+    var aladin = $.aladin('#aladin-lite-div', {survey: "P/DSS2/red", target: "12 01 10.19 -18 45 34.42", zoom: 0.5});
+
+    var overlay = aladin.createOverlay({color: '#00ff00'});
+    aladin.addOverlay(overlay);
+    var fps = aladin.createFootprintsFromSTCS('Polygon J2000 180.28364 -18.96335 180.29188 -18.96335 180.35920 -18.83957 180.35921 -18.83956 180.35921 -18.83351 180.22834 -18.77013 180.22010 -18.77013 180.15269 -18.89383 180.15268 -18.89988 180.15268 -18.89992');
+    fps[0].select();
+    overlay.addFootprints(fps);
+    overlay.addFootprints(aladin.createFootprintsFromSTCS('Polygon J2000 180.74436 -18.90167 180.75044 -18.90167 180.78824 -18.76744 180.78823 -18.76191 180.78822 -18.76185 180.64612 -18.72635 180.64003 -18.72635 180.60216 -18.86057 180.60216 -18.86059 180.60216 -18.86613'));
+    overlay.addFootprints(aladin.createFootprintsFromSTCS('Polygon J2000 180.44564 -19.07151 180.45411 -19.07151 180.52130 -18.94748 180.52130 -18.94143 180.39021 -18.87788 180.38174 -18.87788 180.31447 -19.00185 180.31446 -19.00789 180.31448 -19.00792 180.44562 -19.07150'));
+    overlay = aladin.createOverlay();
+    aladin.addOverlay(overlay);
+    overlay.addFootprints(aladin.createFootprintsFromSTCS('Polygon J2000 180.35216 -18.83702 180.36063 -18.83702 180.42784 -18.71320 180.42784 -18.70715 180.29736 -18.64320 180.28890 -18.64320 180.28886 -18.64322 180.22165 -18.76695 180.22163 -18.76699 180.22162 -18.77304'));
+    overlay.addFootprints(aladin.createFootprintsFromSTCS('Polygon J2000 180.51601 -18.94593 180.52243 -18.94593 180.52244 -18.94592 180.58957 -18.82190 180.58956 -18.81477 180.58956 -18.81475 180.45857 -18.75122 180.45215 -18.75122 180.45213 -18.75122 180.38494 -18.87520 180.38494 -18.87521 180.38494 -18.88234'));
+</script>
+
+</body>
+</html>
diff --git a/src/index.html b/src/index.html
new file mode 100644
index 0000000..eedeea8
--- /dev/null
+++ b/src/index.html
@@ -0,0 +1,59 @@
+<!DOCTYPE html>
+<html>
+    <head>
+        <meta charset="utf-8">
+        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
+        <title></title>
+        <meta name="description" content="">
+        <meta name="viewport" content="width=device-width">
+        
+        <script src="js/libs/jquery-1.9.1.min.js"></script>
+        <script src="js/libs/jquery.mousewheel.min.js"></script>
+        <script src="js/libs/RequestAnimationFrame.js"></script>
+        <script src="js/libs/Stats.js"></script>
+        
+        <script src="js/libs/healpix.min.js"></script>
+        <script src="js/libs/astro/astroMath.js"></script>
+        <script src="js/libs/astro/projection.js"></script>
+        <script src="js/libs/astro/coo.js"></script>
+        
+
+        
+        <script src="js/CooConversion.js"></script>
+        <script src="js/Sesame.js"></script>
+        <script src="js/HealpixCache.js"></script>
+        <script src="js/Utils.js"></script>
+        <script src="js/AladinUtils.js"></script>
+        <script src="js/ProjectionEnum.js"></script>
+        <script src="js/CooFrameEnum.js"></script>
+        <script src="js/Downloader.js"></script>
+        <script src="js/Source.js"></script>
+        <script src="js/Catalog.js"></script>
+        <script src="js/Tile.js"></script>
+        <script src="js/TileBuffer.js"></script>
+        <script src="js/HpxImageSurvey.js"></script>
+        <script src="js/HealpixGrid.js"></script>
+        <script src="js/Location.js"></script>
+        <script src="js/View.js"></script>
+        <script src="js/Aladin.js"></script>
+        
+        <script>
+        $(document).ready(function() {
+            
+            
+            var aladin = $.aladin('divAladin', {zoom: 60});
+            
+        });
+        </script>
+    </head>
+    <body>
+       <noscript><h2>Javascript is needed !</h2></noscript>
+       <div id="statsDiv"></div>
+            
+    
+        <div>
+            <div id="divAladin" style="width: 1000px; height: 700px; border: 1px solid;"></div>
+        </div>
+    </body>
+</html>
+    
diff --git a/src/index_full.html b/src/index_full.html
new file mode 100644
index 0000000..28b79c0
--- /dev/null
+++ b/src/index_full.html
@@ -0,0 +1,60 @@
+<!DOCTYPE html>
+<html>
+    <head>
+        <meta charset="utf-8">
+        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
+        <title></title>
+        <meta name="description" content="">
+        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
+        
+        <script src="js/libs/jquery-1.9.1.min.js"></script>
+        <script src="js/libs/jquery.mousewheel.min.js"></script>
+        <script src="js/libs/RequestAnimationFrame.js"></script>
+        <script src="js/libs/Stats.js"></script>
+        
+        <script src="js/libs/healpix.min.js"></script>
+        <script src="js/libs/astro/astroMath.js"></script>
+        <script src="js/libs/astro/projection.js"></script>
+        <script src="js/libs/astro/coo.js"></script>
+        
+
+        
+        <script src="js/CooConversion.js"></script>
+        <script src="js/Sesame.js"></script>
+        <script src="js/HealpixCache.js"></script>
+        <script src="js/Utils.js"></script>
+        <script src="js/AladinUtils.js"></script>
+        <script src="js/ProjectionEnum.js"></script>
+        <script src="js/CooFrameEnum.js"></script>
+        <script src="js/Downloader.js"></script>
+        <script src="js/Source.js"></script>
+        <script src="js/Catalog.js"></script>
+        <script src="js/Tile.js"></script>
+        <script src="js/TileBuffer.js"></script>
+        <script src="js/HpxImageSurvey.js"></script>
+        <script src="js/HealpixGrid.js"></script>
+        <script src="js/Location.js"></script>
+        <script src="js/View.js"></script>
+        <script src="js/Aladin.js"></script>
+        
+        <script>
+        $(document).ready(function() {
+            
+            $('#divAladin').width($(window).width()-40);
+            $('#divAladin').height($(window).height()-40);
+            
+            
+            var aladin = new Aladin($('#divAladin')[0]);
+            
+        });
+        </script>
+    </head>
+    <body>
+       <noscript><h2>Javascript is needed !</h2></noscript>
+            
+    
+            
+            <div id="divAladin" style="border: 1px solid;"></div>
+    </body>
+</html>
+    
diff --git a/src/js/Aladin.js b/src/js/Aladin.js
index d486fed..cef0bf0 100644
--- a/src/js/Aladin.js
+++ b/src/js/Aladin.js
@@ -626,7 +626,7 @@ Aladin = (function() {
     
     var doAnimation = function(aladin) {
         var params = aladin.animationParams;
-        if (params==null) {
+        if (params==null || ! params['running']) {
             return;
         }
         var now = new Date().getTime();
@@ -654,6 +654,21 @@ Aladin = (function() {
         setTimeout(function() {doAnimation(aladin);}, 50);
         
     };
+
+    /*
+     * Stop all animations that have been initiated  by animateToRaDec or by zoomToFoV
+     * @API
+     *
+     */
+    Aladin.prototype.stopAnimation =  function() {
+        if (this.zoomAnimationParams) {
+            this.zoomAnimationParams['running'] = false;
+        }
+        if (this.animationParams) {
+            this.animationParams['running']     = false;
+        }
+    }
+
     /*
      * animate smoothly from the current position to the given ra, dec
      * 
@@ -678,6 +693,7 @@ Aladin = (function() {
         animationParams['raEnd'] = ra;
         animationParams['decEnd'] = dec;
         animationParams['complete'] = complete;
+        animationParams['running'] = true;
         
         this.animationParams = animationParams;
         
@@ -686,7 +702,7 @@ Aladin = (function() {
     
     var doZoomAnimation = function(aladin) {
         var params = aladin.zoomAnimationParams;
-        if (params==null) {
+        if (params==null || ! params['running']) {
             return;
         }
         var now = new Date().getTime();
@@ -732,9 +748,8 @@ Aladin = (function() {
         zoomAnimationParams['fovStart'] = Math.max(fovArray[0], fovArray[1]);
         zoomAnimationParams['fovEnd'] = fov;
         zoomAnimationParams['complete'] = complete;
+        zoomAnimationParams['running'] = true;
 
-        console.log(zoomAnimationParams);
-        
         this.zoomAnimationParams = zoomAnimationParams;
         doZoomAnimation(this);
     };
diff --git a/src/js/Catalog.js b/src/js/Catalog.js
index fbd8a85..dcf4a30 100644
--- a/src/js/Catalog.js
+++ b/src/js/Catalog.js
@@ -462,6 +462,19 @@ cds.Catalog = (function() {
         this.view = view;
         this.reportChange();
     };
+
+    // remove a source
+    cds.Catalog.prototype.remove = function(source) {
+        var idx = this.sources.indexOf(source);
+        if (idx<0) {
+            return;
+        }
+
+        this.sources[idx].deselect();
+        this.sources.splice(idx, 1);
+
+        this.reportChange();
+    };
     
     cds.Catalog.prototype.removeAll = cds.Catalog.prototype.clear = function() {
         // TODO : RAZ de l'index
diff --git a/src/js/HiPSDefinition.js b/src/js/HiPSDefinition.js
index 1341835..8720cc8 100644
--- a/src/js/HiPSDefinition.js
+++ b/src/js/HiPSDefinition.js
@@ -336,7 +336,7 @@ HiPSDefinition = (function() {
             return defs === null ? [] : window.JSON.parse(defs);
         }
         catch(e) {
-            console.error(e);
+            // silently fail and return empty array
             return [];
         }
     };
@@ -348,7 +348,7 @@ HiPSDefinition = (function() {
             window.localStorage.setItem(HiPSDefinition.LOCAL_STORAGE_KEY, window.JSON.stringify(properties));
         }
         catch(e) {
-            console.error(e);
+            // silently fail and return false
             return false;
         }
 
diff --git a/src/js/MOC.js.bak b/src/js/MOC.js.bak
new file mode 100644
index 0000000..51e0704
--- /dev/null
+++ b/src/js/MOC.js.bak
@@ -0,0 +1,424 @@
+/******************************************************************************
+ * Aladin Lite project
+ * 
+ * File MOC
+ *
+ * This class represents a MOC (Multi Order Coverage map) layer
+ * 
+ * Author: Thomas Boch[CDS]
+ * 
+ *****************************************************************************/
+
+MOC = (function() {
+    MOC = function(options) {
+        this.order = undefined;
+
+        this.type = 'moc';
+
+        // TODO homogenize options parsing for all kind of overlay (footprints, catalog, MOC)
+        options = options || {};
+        this.name = options.name || "MOC";
+        this.color = options.color || Color.getNextColor();
+        this.opacity = options.opacity || 1;
+        this.opacity = Math.max(0, Math.min(1, this.opacity)); // 0 <= this.opacity <= 1
+        this.lineWidth = options["lineWidth"] || 1;
+        this.adaptativeDisplay = options['adaptativeDisplay'] !== false;
+
+        this.proxyCalled = false; // this is a flag to check whether we already tried to load the MOC through the proxy
+
+        // two dict-like objects to handle MOC cells at high and low resolution
+        this._highResCells = {};
+        this._lowResCells = {};
+
+        this.nbCellsDeepestLevel = 0; // needed to compute the sky fraction of the MOC
+
+        this.isShowing = true;
+        this.ready = false;
+    }
+
+    
+    function log2(val) {
+        return Math.log(val) / Math.LN2;
+    }
+
+    // max norder we can currently handle (limitation of healpix.js)
+    MOC.MAX_NORDER = 13; // NSIDE = 8192
+
+    MOC.LOWRES_MAXORDER = 5; // 5 or 6 ??
+    MOC.HIGHRES_MAXORDER = 11; // ??
+
+    // TODO: options to modifiy this ?
+    MOC.PIVOT_FOV = 20; // when do we switch from low res cells to high res cells (fov in degrees)
+
+    // add pixel (order, ipix)
+    MOC.prototype._addPix = function(order, ipix) {
+        // fill low and high level cells
+        // 1. if order <= LOWRES_MAXORDER, just store value in low and high res cells
+        if (order<=MOC.LOWRES_MAXORDER) {
+            if (! (order in this._lowResCells)) {
+                this._lowResCells[order] = [];
+                this._highResCells[order] = [];
+            }
+            this._lowResCells[order].push(ipix);
+            this._highResCells[order].push(ipix);
+        }
+        // 2. if LOWRES_MAXORDER < order <= HIGHRES_MAXORDER , degrade ipix for low res cells
+        else if (order<=MOC.HIGHRES_MAXORDER) {
+            if (! (order in this._highResCells)) {
+                this._highResCells[order] = [];
+            }
+            this._highResCells[order].push(ipix);
+            
+            var degradedOrder = MOC.LOWRES_MAXORDER; 
+            var degradedIpix  = Math.floor(ipix / Math.pow(4, (order - degradedOrder)));
+            if (! (degradedOrder in this._lowResCells)) {
+                this._lowResCells[degradedOrder]= [];
+            }
+            this._lowResCells[degradedOrder].push(degradedIpix);
+        }
+        // 3. if order > HIGHRES_MAXORDER , degrade ipix for low res and high res cells
+        else {
+            // low res cells
+            var degradedOrder = MOC.LOWRES_MAXORDER; 
+            var degradedIpix  = Math.floor(ipix / Math.pow(4, (order - degradedOrder)));
+            if (! (degradedOrder in this._lowResCells)) {
+                this._lowResCells[degradedOrder] = [];
+            }
+            this._lowResCells[degradedOrder].push(degradedIpix);
+            
+            // high res cells
+            degradedOrder = MOC.HIGHRES_MAXORDER; 
+            degradedIpix  = Math.floor(ipix / Math.pow(4, (order - degradedOrder)));
+            if (! (degradedOrder in this._highResCells)) {
+                this._highResCells[degradedOrder] = [];
+            }
+            this._highResCells[degradedOrder].push(degradedIpix);
+        }
+
+        this.nbCellsDeepestLevel += Math.pow(4, (this.order - order));
+    };
+
+
+    /**
+     *  Return a value between 0 and 1 denoting the fraction of the sky
+     *  covered by the MOC
+     */
+    MOC.prototype.skyFraction = function() {
+        return this.nbCellsDeepestLevel / (12 * Math.pow(4, this.order));
+    };
+
+    /**
+     * set MOC data by parsing a MOC serialized in JSON
+     * (as defined in IVOA MOC document, section 3.1.1)
+     */
+    MOC.prototype.dataFromJSON = function(jsonMOC) {
+        this._highResCells = {};
+        this._lowResCells = {};
+
+        var order, ipix;
+        for (var orderStr in jsonMOC) {
+            if (jsonMOC.hasOwnProperty(orderStr)) {
+                order = parseInt(orderStr);
+                if (this.order===undefined || order > this.order) {
+                    this.order = order;
+                }
+                for (var k=0; k<jsonMOC[orderStr].length; k++) {
+                    ipix = jsonMOC[orderStr][k];
+                    this._addPix(order, ipix);
+                }
+            }
+        }
+
+        this.ready = true;
+    };
+
+    /**
+     * set MOC data by parsing a URL pointing to a FITS MOC file
+     */
+    MOC.prototype.dataFromFITSURL = function(mocURL, successCallback) {
+        this._highResCells = {};
+        this._lowResCells = {};
+
+        var self = this;
+        var callback = function() {
+            // note: in the callback, 'this' refers to the FITS instance
+
+            // first, let's find MOC norder
+            var hdr0;
+            try {
+                // A zero-length hdus array might mean the served URL does not have CORS header
+                // --> let's try again through the proxy
+                if (this.hdus.length == 0) {
+                    if (self.proxyCalled !== true) {
+                        self.proxyCalled = true;
+                        var proxiedURL = Aladin.JSONP_PROXY + '?url=' + encodeURIComponent(self.dataURL);
+                        new astro.FITS(proxiedURL, callback);
+                    }
+
+                    return;
+                }
+                hdr0 = this.getHeader(0);
+            }
+            catch (e) {
+                console.error('Could not get header of extension #0');
+                return;
+            }
+            var hdr1 = this.getHeader(1);
+
+            if (hdr0.contains('HPXMOC')) {
+                self.order = hdr0.get('HPXMOC')
+            }
+            else if (hdr0.contains('MOCORDER')) {
+                self.order = hdr0.get('MOCORDER')
+            }
+            else if (hdr1.contains('HPXMOC')) {
+                self.order = hdr1.get('HPXMOC')
+            }
+            else if (hdr1.contains('MOCORDER')) {
+                self.order = hdr1.get('MOCORDER')
+            }
+            else {
+                console.error('Can not find MOC order in FITS file');
+                return;
+            }
+
+            var data = this.getDataUnit(1);
+            var colName = data.columns[0];
+            data.getRows(0, data.rows, function(rows) {
+                for (var k=0; k<rows.length; k++) {
+                    var uniq = rows[k][colName];
+                    var order = Math.floor(Math.floor(log2(Math.floor(uniq/4))) / 2);
+                    var ipix = uniq - 4 *(Math.pow(4, order));
+
+
+
+                    self._addPix(order, ipix);
+                }
+
+            });
+            data = null; // this helps releasing memory
+
+            if (successCallback) {
+                successCallback();
+            }
+
+            self.ready = true;
+        }; // end of callback function
+
+        this.dataURL = mocURL;
+
+        // instantiate the FITS object which will fetch the URL passed as parameter
+        new astro.FITS(this.dataURL, callback);
+    };
+
+    MOC.prototype.setView = function(view) {
+        this.view = view;
+    };
+    
+    MOC.prototype.draw = function(ctx, projection, viewFrame, width, height, largestDim, zoomFactor, fov) {
+        if (! this.isShowing || ! this.ready) {
+            return;
+        }
+
+        var mocCells = fov > MOC.PIVOT_FOV && this.adaptativeDisplay ? this._lowResCells : this._highResCells;
+
+        this._drawCells(ctx, mocCells, fov, projection, viewFrame, CooFrameEnum.J2000, width, height, largestDim, zoomFactor);
+
+    };
+
+    MOC.prototype._drawCells = function(ctx, mocCells, fov, projection, viewFrame, surveyFrame, width, height, largestDim, zoomFactor) {
+        ctx.lineWidth = this.lineWidth;
+        // if opacity==1, we draw solid lines, else we fill each HEALPix cell
+        if (this.opacity==1) {
+            ctx.strokeStyle = this.color;
+        }
+        else {
+            ctx.fillStyle = this.color;
+            ctx.globalAlpha = this.opacity;
+        }
+
+        ctx.beginPath();
+
+        var orderedKeys = [];
+        for (key in mocCells) {
+            orderedKeys.push(parseInt(key));
+        }
+        orderedKeys.sort(function(a, b) {return a - b;});
+        var nside, xyCorners, ipix;
+
+        // go through all MOC cells for large fov
+        if (fov>80) {
+            var norder;
+            for (var i=0; i<orderedKeys.length; i++) {
+                norder = orderedKeys[i];
+                nside = 1 << norder;
+
+                for (var j=0; j<mocCells[norder].length; j++) {
+                    ipix = mocCells[norder][j];
+                    if (norder>=3) {
+                        xyCorners = getXYCorners(nside, ipix, viewFrame, surveyFrame, width, height, largestDim, zoomFactor, projection);
+                        if (xyCorners) {
+                            drawCorners(ctx, xyCorners);
+                        }
+                    }
+                    else { // compute all norder 3 ipix indexes
+                        var factor = Math.pow(4, (3-norder));
+                        var startIpix = ipix * factor;
+
+                        for (var k=0; k<factor; k++) {
+                            xyCorners = getXYCorners(8, startIpix + k, viewFrame, surveyFrame, width, height, largestDim, zoomFactor, projection);
+                            if (xyCorners) {
+                                drawCorners(ctx, xyCorners);
+                            }
+                        }
+                    }
+                }
+            }
+        }
+        else {
+            //var visibleHpxCellsOrder3 = this.view.getVisiblePixList(3, CooFrameEnum.J2000);
+            var cellsOrder3ToIgnore = {}
+            var norderMax = orderedKeys[orderedKeys.length-1];
+            for (var norder=1; norder<=norderMax; norder++) {
+                nside = 1 << norder;
+
+                if (typeof mocCells[norder]==='undefined') {
+                    continue;
+                }
+                if (norder<=3) {
+                    for (var j=0; j<mocCells[norder].length; j++) {
+                        ipix = mocCells[norder][j];
+                        var factor = Math.pow(4, (3-norder));
+                        var startIpix = ipix * factor;
+                        for (var k=0; k<factor; k++) {
+                            norder3Ipix = startIpix + k;
+                            xyCorners = getXYCorners(8, norder3Ipix, viewFrame, surveyFrame, width, height, largestDim, zoomFactor, projection);
+                            if (xyCorners) {
+                                drawCorners(ctx, xyCorners);
+                            }
+                            cellsOrder3ToIgnore[norder3Ipix] = 1;
+                        }
+                    }
+                }
+                // TODO: this part could be improved by eliminating ipix already rendered
+                else {
+                    for (var j=0; j<mocCells[norder].length; j++) {
+                        ipix = mocCells[norder][j];
+                        var parentIpixOrder3 = Math.floor(ipix/Math.pow(4, norder-3));
+                        if (parentIpixOrder3 in cellsOrder3ToIgnore) {
+                            continue;
+                        }
+                        xyCorners = getXYCorners(nside, ipix, viewFrame, surveyFrame, width, height, largestDim, zoomFactor, projection);
+                        if (xyCorners) {
+                            drawCorners(ctx, xyCorners);
+                        }
+                    }
+                }
+            }
+        }
+/*
+*/
+        if (this.opacity==1) {
+            ctx.stroke();
+        }
+        else {
+            ctx.fill();
+            ctx.globalAlpha = 1.0;
+        }
+    };
+
+    var drawCorners = function(ctx, xyCorners) {
+        ctx.moveTo(xyCorners[0].vx, xyCorners[0].vy);
+        ctx.lineTo(xyCorners[1].vx, xyCorners[1].vy);
+        ctx.lineTo(xyCorners[2].vx, xyCorners[2].vy);
+        ctx.lineTo(xyCorners[3].vx, xyCorners[3].vy);
+        ctx.lineTo(xyCorners[0].vx, xyCorners[0].vy);
+    }
+
+    // TODO: merge with what is done in View.getVisibleCells
+    var getXYCorners = function(nside, ipix, viewFrame, surveyFrame, width, height, largestDim, zoomFactor, projection) {
+        var cornersXYView = [];
+        var cornersXY = [];
+
+        var spVec = new SpatialVector();
+
+        var corners = HealpixCache.corners_nest(ipix, nside);
+        for (var k=0; k<4; k++) {
+            spVec.setXYZ(corners[k].x, corners[k].y, corners[k].z);
+
+            // need for frame transformation ?
+            if (surveyFrame && surveyFrame.system != viewFrame.system) {
+                if (surveyFrame.system == CooFrameEnum.SYSTEMS.J2000) {
+                    var radec = CooConversion.J2000ToGalactic([spVec.ra(), spVec.dec()]);
+                    lon = radec[0];
+                    lat = radec[1];
+                }
+                else if (surveyFrame.system == CooFrameEnum.SYSTEMS.GAL) {
+                    var radec = CooConversion.GalacticToJ2000([spVec.ra(), spVec.dec()]);
+                    lon = radec[0];
+                    lat = radec[1];
+                }
+            }
+            else {
+                lon = spVec.ra();
+                lat = spVec.dec();
+            }
+
+            cornersXY[k] = projection.project(lon, lat);
+        }
+
+
+        if (cornersXY[0] == null ||  cornersXY[1] == null  ||  cornersXY[2] == null ||  cornersXY[3] == null ) {
+            return null;
+        }
+
+        for (var k=0; k<4; k++) {
+            cornersXYView[k] = AladinUtils.xyToView(cornersXY[k].X, cornersXY[k].Y, width, height, largestDim, zoomFactor);
+        }
+
+        var indulge = 10;
+        // detect pixels outside view. Could be improved !
+        // we minimize here the number of cells returned
+        if( cornersXYView[0].vx<0 && cornersXYView[1].vx<0 && cornersXYView[2].vx<0 &&cornersXYView[3].vx<0) {
+            return null;
+        }
+        if( cornersXYView[0].vy<0 && cornersXYView[1].vy<0 && cornersXYView[2].vy<0 &&cornersXYView[3].vy<0) {
+            return null;
+        }
+        if( cornersXYView[0].vx>=width && cornersXYView[1].vx>=width && cornersXYView[2].vx>=width &&cornersXYView[3].vx>=width) {
+            return null;
+        }
+        if( cornersXYView[0].vy>=height && cornersXYView[1].vy>=height && cornersXYView[2].vy>=height &&cornersXYView[3].vy>=height) {
+            return null;
+        }
+
+        cornersXYView = AladinUtils.grow2(cornersXYView, 1);
+        return cornersXYView;
+    };
+
+    MOC.prototype.reportChange = function() {
+        this.view.requestRedraw();
+    };
+
+    MOC.prototype.show = function() {
+        if (this.isShowing) {
+            return;
+        }
+        this.isShowing = true;
+        this.reportChange();
+    };
+
+    MOC.prototype.hide = function() {
+        if (! this.isShowing) {
+            return;
+        }
+        this.isShowing = false;
+        this.reportChange();
+    };
+
+
+    return MOC;
+
+})();
+
+    
diff --git a/src/js/RequestAnimationFrame.js b/src/js/libs/RequestAnimationFrame.js
similarity index 100%
rename from src/js/RequestAnimationFrame.js
rename to src/js/libs/RequestAnimationFrame.js
diff --git a/src/js/Stats.js b/src/js/libs/Stats.js
similarity index 100%
rename from src/js/Stats.js
rename to src/js/libs/Stats.js
diff --git a/src/js/libs/astro/astroFrame.js b/src/js/libs/astro/astroFrame.js
new file mode 100644
index 0000000..5e51d18
--- /dev/null
+++ b/src/js/libs/astro/astroFrame.js
@@ -0,0 +1,13 @@
+//=======================================
+//          General variable definitions
+//=======================================
+
+var Umatrix3 = [ [1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0] ];
+
+var ICRS = 0;
+var FK5 = 1;
+var FK4 = 2;
+var GAL = 3;
+var SGAL = 4;
+var ECL = 5;
+var frameNames = [ "ICRS", "FK5", "FK4", "Gal", "SGal", "Ecl" ];
\ No newline at end of file
diff --git a/src/js/astroMath.js b/src/js/libs/astro/astroMath.js
similarity index 100%
rename from src/js/astroMath.js
rename to src/js/libs/astro/astroMath.js
diff --git a/src/js/coo.js b/src/js/libs/astro/coo.js
similarity index 100%
rename from src/js/coo.js
rename to src/js/libs/astro/coo.js
diff --git a/src/js/projection.js b/src/js/libs/astro/projection.js
similarity index 100%
rename from src/js/projection.js
rename to src/js/libs/astro/projection.js
diff --git a/src/js/fits.js b/src/js/libs/fits.js
similarity index 100%
rename from src/js/fits.js
rename to src/js/libs/fits.js
diff --git a/src/js/libs/fits.js.org b/src/js/libs/fits.js.org
new file mode 100644
index 0000000..a2171fe
--- /dev/null
+++ b/src/js/libs/fits.js.org
@@ -0,0 +1,1713 @@
+// Generated by CoffeeScript 1.6.3
+(function() {
+  var Base, BinaryTable, CompressedImage, DataUnit, Decompress, FITS, HDU, Header, HeaderVerify, Image, ImageUtils, Parser, Table, Tabular, _ref, _ref1,
+    __hasProp = {}.hasOwnProperty,
+    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
+    __slice = [].slice;
+
+  if (this.astro == null) {
+    this.astro = {};
+  }
+
+  Base = (function() {
+    function Base() {}
+
+    Base.include = function(obj) {
+      var key, value;
+      for (key in obj) {
+        value = obj[key];
+        this.prototype[key] = value;
+      }
+      return this;
+    };
+
+    Base.extend = function(obj) {
+      var key, value;
+      for (key in obj) {
+        value = obj[key];
+        this[key] = value;
+      }
+      return this;
+    };
+
+    Base.prototype.proxy = function(func) {
+      var _this = this;
+      return function() {
+        return func.apply(_this, arguments);
+      };
+    };
+
+    Base.prototype.invoke = function(callback, opts, data) {
+      var context;
+      context = (opts != null ? opts.context : void 0) != null ? opts.context : this;
+      if (callback != null) {
+        return callback.call(context, data, opts);
+      }
+    };
+
+    return Base;
+
+  })();
+
+  Parser = (function(_super) {
+    __extends(Parser, _super);
+
+    Parser.prototype.LINEWIDTH = 80;
+
+    Parser.prototype.BLOCKLENGTH = 2880;
+
+    File.prototype.slice = File.prototype.slice || File.prototype.webkitSlice;
+
+    Blob.prototype.slice = Blob.prototype.slice || Blob.prototype.webkitSlice;
+
+    function Parser(arg, callback, opts) {
+      var xhr,
+        _this = this;
+      this.arg = arg;
+      this.callback = callback;
+      this.opts = opts;
+      this.hdus = [];
+      this.blockCount = 0;
+      this.begin = 0;
+      this.end = this.BLOCKLENGTH;
+      this.offset = 0;
+      this.headerStorage = new Uint8Array();
+      if (typeof this.arg === 'string') {
+        this.readNextBlock = this._readBlockFromBuffer;
+        xhr = new XMLHttpRequest();
+        xhr.open('GET', this.arg);
+        xhr.responseType = 'arraybuffer';
+        xhr.onload = function() {
+          if (xhr.status !== 200) {
+            _this.invoke(_this.callback, _this.opts);
+            return;
+          }
+          _this.arg = xhr.response;
+          _this.length = _this.arg.byteLength;
+          return _this.readFromBuffer();
+        };
+        xhr.send();
+      } else {
+        this.length = this.arg.size;
+        this.readNextBlock = this._readBlockFromFile;
+        this.readFromFile();
+      }
+    }
+
+    Parser.prototype.readFromBuffer = function() {
+      var block;
+      block = this.arg.slice(this.begin + this.offset, this.end + this.offset);
+      return this.readBlock(block);
+    };
+
+    Parser.prototype.readFromFile = function() {
+      var block,
+        _this = this;
+      this.reader = new FileReader();
+      this.reader.onloadend = function(e) {
+        return _this.readBlock(e.target.result);
+      };
+      block = this.arg.slice(this.begin + this.offset, this.end + this.offset);
+      return this.reader.readAsArrayBuffer(block);
+    };
+
+    Parser.prototype.readBlock = function(block) {
+      var arr, dataLength, dataunit, header, rowIndex, rows, s, slice, tmp, value, _i, _len, _ref;
+      arr = new Uint8Array(block);
+      tmp = new Uint8Array(this.headerStorage);
+      this.headerStorage = new Uint8Array(this.end);
+      this.headerStorage.set(tmp, 0);
+      this.headerStorage.set(arr, this.begin);
+      rows = this.BLOCKLENGTH / this.LINEWIDTH;
+      while (rows--) {
+        rowIndex = rows * this.LINEWIDTH;
+        if (arr[rowIndex] === 32) {
+          continue;
+        }
+        if (arr[rowIndex] === 69 && arr[rowIndex + 1] === 78 && arr[rowIndex + 2] === 68 && arr[rowIndex + 3] === 32) {
+          s = '';
+          _ref = this.headerStorage;
+          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
+            value = _ref[_i];
+            s += String.fromCharCode(value);
+          }
+          header = new Header(s);
+          this.start = this.end + this.offset;
+          dataLength = header.getDataLength();
+          slice = this.arg.slice(this.start, this.start + dataLength);
+          if (header.hasDataUnit()) {
+            dataunit = this.createDataUnit(header, slice);
+          }
+          this.hdus.push(new HDU(header, dataunit));
+          this.offset += this.end + dataLength + this.excessBytes(dataLength);
+          if (this.offset === this.length) {
+            this.headerStorage = null;
+            this.invoke(this.callback, this.opts, this);
+            return;
+          }
+          this.blockCount = 0;
+          this.begin = this.blockCount * this.BLOCKLENGTH;
+          this.end = this.begin + this.BLOCKLENGTH;
+          this.headerStorage = new Uint8Array();
+          block = this.arg.slice(this.begin + this.offset, this.end + this.offset);
+          this.readNextBlock(block);
+          return;
+        }
+        break;
+      }
+      this.blockCount += 1;
+      this.begin = this.blockCount * this.BLOCKLENGTH;
+      this.end = this.begin + this.BLOCKLENGTH;
+      block = this.arg.slice(this.begin + this.offset, this.end + this.offset);
+      this.readNextBlock(block);
+    };
+
+    Parser.prototype._readBlockFromBuffer = function(block) {
+      return this.readBlock(block);
+    };
+
+    Parser.prototype._readBlockFromFile = function(block) {
+      return this.reader.readAsArrayBuffer(block);
+    };
+
+    Parser.prototype.createDataUnit = function(header, blob) {
+      var type;
+      type = header.getDataType();
+      return new astro.FITS[type](header, blob);
+    };
+
+    Parser.prototype.excessBytes = function(length) {
+      return (this.BLOCKLENGTH - (length % this.BLOCKLENGTH)) % this.BLOCKLENGTH;
+    };
+
+    Parser.prototype.isEOF = function() {
+      if (this.offset === this.length) {
+        return true;
+      } else {
+        return false;
+      }
+    };
+
+    return Parser;
+
+  })(Base);
+
+  FITS = (function(_super) {
+    __extends(FITS, _super);
+
+    function FITS(arg, callback, opts) {
+      var parser,
+        _this = this;
+      this.arg = arg;
+      parser = new Parser(this.arg, function(fits) {
+        _this.hdus = parser.hdus;
+        return _this.invoke(callback, opts, _this);
+      });
+    }
+
+    FITS.prototype.getHDU = function(index) {
+      var hdu, _i, _len, _ref;
+      if ((index != null) && (this.hdus[index] != null)) {
+        return this.hdus[index];
+      }
+      _ref = this.hdus;
+      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
+        hdu = _ref[_i];
+        if (hdu.hasData()) {
+          return hdu;
+        }
+      }
+    };
+
+    FITS.prototype.getHeader = function(index) {
+      return this.getHDU(index).header;
+    };
+
+    FITS.prototype.getDataUnit = function(index) {
+      return this.getHDU(index).data;
+    };
+
+    return FITS;
+
+  })(Base);
+
+  FITS.version = '0.6.5';
+
+  this.astro.FITS = FITS;
+
+  DataUnit = (function(_super) {
+    __extends(DataUnit, _super);
+
+    DataUnit.swapEndian = {
+      B: function(value) {
+        return value;
+      },
+      I: function(value) {
+        return (value << 8) | (value >> 8);
+      },
+      J: function(value) {
+        return ((value & 0xFF) << 24) | ((value & 0xFF00) << 8) | ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF);
+      }
+    };
+
+    DataUnit.swapEndian[8] = DataUnit.swapEndian['B'];
+
+    DataUnit.swapEndian[16] = DataUnit.swapEndian['I'];
+
+    DataUnit.swapEndian[32] = DataUnit.swapEndian['J'];
+
+    function DataUnit(header, data) {
+      if (data instanceof ArrayBuffer) {
+        this.buffer = data;
+      } else {
+        this.blob = data;
+      }
+    }
+
+    return DataUnit;
+
+  })(Base);
+
+  this.astro.FITS.DataUnit = DataUnit;
+
+  HeaderVerify = {
+    verifyOrder: function(keyword, order) {
+      if (order !== this.cardIndex) {
+        return console.warn("" + keyword + " should appear at index " + this.cardIndex + " in the FITS header");
+      }
+    },
+    verifyBetween: function(keyword, value, lower, upper) {
+      if (!(value >= lower && value <= upper)) {
+        throw "The " + keyword + " value of " + value + " is not between " + lower + " and " + upper;
+      }
+    },
+    verifyBoolean: function(value) {
+      if (value === "T") {
+        return true;
+      } else {
+        return false;
+      }
+    },
+    VerifyFns: {
+      SIMPLE: function() {
+        var args, value;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        value = arguments[0];
+        this.primary = true;
+        this.verifyOrder("SIMPLE", 0);
+        return this.verifyBoolean(value);
+      },
+      XTENSION: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        this.extension = true;
+        this.extensionType = arguments[0];
+        this.verifyOrder("XTENSION", 0);
+        return this.extensionType;
+      },
+      BITPIX: function() {
+        var args, key, value;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        key = "BITPIX";
+        value = parseInt(arguments[0]);
+        this.verifyOrder(key, 1);
+        if (value !== 8 && value !== 16 && value !== 32 && value !== (-32) && value !== (-64)) {
+          throw "" + key + " value " + value + " is not permitted";
+        }
+        return value;
+      },
+      NAXIS: function() {
+        var args, array, key, required, value, _ref;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        key = "NAXIS";
+        value = parseInt(arguments[0]);
+        array = arguments[1];
+        if (!array) {
+          this.verifyOrder(key, 2);
+          this.verifyBetween(key, value, 0, 999);
+          if (this.isExtension()) {
+            if ((_ref = this.extensionType) === "TABLE" || _ref === "BINTABLE") {
+              required = 2;
+              if (value !== required) {
+                throw "" + key + " must be " + required + " for TABLE and BINTABLE extensions";
+              }
+            }
+          }
+        }
+        return value;
+      },
+      PCOUNT: function() {
+        var args, key, order, required, value, _ref;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        key = "PCOUNT";
+        value = parseInt(arguments[0]);
+        order = 1 + 1 + 1 + this.get("NAXIS");
+        this.verifyOrder(key, order);
+        if (this.isExtension()) {
+          if ((_ref = this.extensionType) === "IMAGE" || _ref === "TABLE") {
+            required = 0;
+            if (value !== required) {
+              throw "" + key + " must be " + required + " for the " + this.extensionType + " extensions";
+            }
+          }
+        }
+        return value;
+      },
+      GCOUNT: function() {
+        var args, key, order, required, value, _ref;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        key = "GCOUNT";
+        value = parseInt(arguments[0]);
+        order = 1 + 1 + 1 + this.get("NAXIS") + 1;
+        this.verifyOrder(key, order);
+        if (this.isExtension()) {
+          if ((_ref = this.extensionType) === "IMAGE" || _ref === "TABLE" || _ref === "BINTABLE") {
+            required = 1;
+            if (value !== required) {
+              throw "" + key + " must be " + required + " for the " + this.extensionType + " extensions";
+            }
+          }
+        }
+        return value;
+      },
+      EXTEND: function() {
+        var args, value;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        value = arguments[0];
+        if (!this.isPrimary()) {
+          throw "EXTEND must only appear in the primary header";
+        }
+        return this.verifyBoolean(value);
+      },
+      BSCALE: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseFloat(arguments[0]);
+      },
+      BZERO: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseFloat(arguments[0]);
+      },
+      BLANK: function() {
+        var args, value;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        value = arguments[0];
+        if (!(this.get("BITPIX") > 0)) {
+          console.warn("BLANK is not to be used for BITPIX = " + (this.get('BITPIX')));
+        }
+        return parseInt(value);
+      },
+      DATAMIN: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseFloat(arguments[0]);
+      },
+      DATAMAX: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseFloat(arguments[0]);
+      },
+      EXTVER: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseInt(arguments[0]);
+      },
+      EXTLEVEL: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseInt(arguments[0]);
+      },
+      TFIELDS: function() {
+        var args, value;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        value = parseInt(arguments[0]);
+        this.verifyBetween("TFIELDS", value, 0, 999);
+        return value;
+      },
+      TBCOL: function() {
+        var args, index, value;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        value = arguments[0];
+        index = arguments[2];
+        this.verifyBetween("TBCOL", index, 0, this.get("TFIELDS"));
+        return value;
+      },
+      ZIMAGE: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return this.verifyBoolean(arguments[0]);
+      },
+      ZCMPTYPE: function() {
+        var args, value;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        value = arguments[0];
+        if (value !== 'GZIP_1' && value !== 'RICE_1' && value !== 'PLIO_1' && value !== 'HCOMPRESS_1') {
+          throw "ZCMPTYPE value " + value + " is not permitted";
+        }
+        if (value !== 'RICE_1') {
+          throw "Compress type " + value + " is not yet implement";
+        }
+        return value;
+      },
+      ZBITPIX: function() {
+        var args, value;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        value = parseInt(arguments[0]);
+        if (value !== 8 && value !== 16 && value !== 32 && value !== 64 && value !== (-32) && value !== (-64)) {
+          throw "ZBITPIX value " + value + " is not permitted";
+        }
+        return value;
+      },
+      ZNAXIS: function() {
+        var args, array, value;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        value = parseInt(arguments[0]);
+        array = arguments[1];
+        value = value;
+        if (!array) {
+          this.verifyBetween("ZNAXIS", value, 0, 999);
+        }
+        return value;
+      },
+      ZTILE: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseInt(arguments[0]);
+      },
+      ZSIMPLE: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        if (arguments[0] === "T") {
+          return true;
+        } else {
+          return false;
+        }
+      },
+      ZPCOUNT: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseInt(arguments[0]);
+      },
+      ZGCOUNT: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseInt(arguments[0]);
+      },
+      ZDITHER0: function() {
+        var args;
+        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
+        return parseInt(arguments[0]);
+      }
+    }
+  };
+
+  this.astro.FITS.HeaderVerify = HeaderVerify;
+
+  Header = (function(_super) {
+    __extends(Header, _super);
+
+    Header.include(HeaderVerify);
+
+    Header.prototype.arrayPattern = /(\D+)(\d+)/;
+
+    Header.prototype.maxLines = 600;
+
+    function Header(block) {
+      var method, name, _ref;
+      this.primary = false;
+      this.extension = false;
+      this.verifyCard = {};
+      _ref = this.VerifyFns;
+      for (name in _ref) {
+        method = _ref[name];
+        this.verifyCard[name] = this.proxy(method);
+      }
+      this.cards = {};
+      this.cards["COMMENT"] = [];
+      this.cards["HISTORY"] = [];
+      this.cardIndex = 0;
+      this.block = block;
+      this.readBlock(block);
+    }
+
+    Header.prototype.get = function(key) {
+      if (this.contains(key)) {
+        return this.cards[key].value;
+      } else {
+        return null;
+      }
+    };
+
+    Header.prototype.set = function(key, value, comment) {
+      comment = comment || '';
+      this.cards[key] = {
+        index: this.cardIndex,
+        value: value,
+        comment: comment
+      };
+      return this.cardIndex += 1;
+    };
+
+    Header.prototype.contains = function(key) {
+      return this.cards.hasOwnProperty(key);
+    };
+
+    Header.prototype.readLine = function(l) {
+      var blank, comment, firstByte, indicator, key, value, _ref;
+      key = l.slice(0, 8).trim();
+      blank = key === '';
+      if (blank) {
+        return;
+      }
+      indicator = l.slice(8, 10);
+      value = l.slice(10);
+      if (indicator !== "= ") {
+        if (key === 'COMMENT' || key === 'HISTORY') {
+          this.cards[key].push(value.trim());
+        }
+        return;
+      }
+      _ref = value.split(' /'), value = _ref[0], comment = _ref[1];
+      value = value.trim();
+      firstByte = value[0];
+      if (firstByte === "'") {
+        value = value.slice(1, -1).trim();
+      } else {
+        if (value !== 'T' && value !== 'F') {
+          value = parseFloat(value);
+        }
+      }
+      value = this.validate(key, value);
+      return this.set(key, value, comment);
+    };
+
+    Header.prototype.validate = function(key, value) {
+      var baseKey, index, isArray, match, _ref;
+      index = null;
+      baseKey = key;
+      isArray = this.arrayPattern.test(key);
+      if (isArray) {
+        match = this.arrayPattern.exec(key);
+        _ref = match.slice(1), baseKey = _ref[0], index = _ref[1];
+      }
+      if (baseKey in this.verifyCard) {
+        value = this.verifyCard[baseKey](value, isArray, index);
+      }
+      return value;
+    };
+
+    Header.prototype.readBlock = function(block) {
+      var i, line, lineWidth, nLines, _i, _ref, _results;
+      lineWidth = 80;
+      nLines = block.length / lineWidth;
+      nLines = nLines < this.maxLines ? nLines : this.maxLines;
+      _results = [];
+      for (i = _i = 0, _ref = nLines - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
+        line = block.slice(i * lineWidth, (i + 1) * lineWidth);
+        _results.push(this.readLine(line));
+      }
+      return _results;
+    };
+
+    Header.prototype.hasDataUnit = function() {
+      if (this.get("NAXIS") === 0) {
+        return false;
+      } else {
+        return true;
+      }
+    };
+
+    Header.prototype.getDataLength = function() {
+      var i, length, naxis, _i, _ref;
+      if (!this.hasDataUnit()) {
+        return 0;
+      }
+      naxis = [];
+      for (i = _i = 1, _ref = this.get("NAXIS"); 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
+        naxis.push(this.get("NAXIS" + i));
+      }
+      length = naxis.reduce(function(a, b) {
+        return a * b;
+      }) * Math.abs(this.get("BITPIX")) / 8;
+      length += this.get("PCOUNT");
+      return length;
+    };
+
+    Header.prototype.getDataType = function() {
+      switch (this.extensionType) {
+        case 'BINTABLE':
+          if (this.contains('ZIMAGE')) {
+            return 'CompressedImage';
+          }
+          return 'BinaryTable';
+        case 'TABLE':
+          return 'Table';
+        default:
+          if (this.hasDataUnit()) {
+            return 'Image';
+          } else {
+            return null;
+          }
+      }
+    };
+
+    Header.prototype.isPrimary = function() {
+      return this.primary;
+    };
+
+    Header.prototype.isExtension = function() {
+      return this.extension;
+    };
+
+    return Header;
+
+  })(Base);
+
+  this.astro.FITS.Header = Header;
+
+  ImageUtils = {
+    getExtent: function(arr) {
+      var index, max, min, value;
+      index = arr.length;
+      while (index--) {
+        value = arr[index];
+        if (isNaN(value)) {
+          continue;
+        }
+        min = max = value;
+        break;
+      }
+      if (index === -1) {
+        return [NaN, NaN];
+      }
+      while (index--) {
+        value = arr[index];
+        if (isNaN(value)) {
+          continue;
+        }
+        if (value < min) {
+          min = value;
+        }
+        if (value > max) {
+          max = value;
+        }
+      }
+      return [min, max];
+    },
+    getPixel: function(arr, x, y) {
+      return arr[y * this.width + x];
+    }
+  };
+
+  this.astro.FITS.ImageUtils = ImageUtils;
+
+  Image = (function(_super) {
+    __extends(Image, _super);
+
+    Image.include(ImageUtils);
+
+    Image.prototype.allocationSize = 16777216;
+
+    function Image(header, data) {
+      var begin, frame, i, naxis, _i, _j, _ref;
+      Image.__super__.constructor.apply(this, arguments);
+      naxis = header.get("NAXIS");
+      this.bitpix = header.get("BITPIX");
+      this.naxis = [];
+      for (i = _i = 1; 1 <= naxis ? _i <= naxis : _i >= naxis; i = 1 <= naxis ? ++_i : --_i) {
+        this.naxis.push(header.get("NAXIS" + i));
+      }
+      this.width = header.get("NAXIS1");
+      this.height = header.get("NAXIS2") || 1;
+      this.depth = header.get("NAXIS3") || 1;
+      this.bzero = header.get("BZERO") || 0;
+      this.bscale = header.get("BSCALE") || 1;
+      this.bytes = Math.abs(this.bitpix) / 8;
+      this.length = this.naxis.reduce(function(a, b) {
+        return a * b;
+      }) * Math.abs(this.bitpix) / 8;
+      this.frame = 0;
+      this.frameOffsets = [];
+      this.frameLength = this.bytes * this.width * this.height;
+      this.nBuffers = this.buffer != null ? 1 : 2;
+      for (i = _j = 0, _ref = this.depth - 1; 0 <= _ref ? _j <= _ref : _j >= _ref; i = 0 <= _ref ? ++_j : --_j) {
+        begin = i * this.frameLength;
+        frame = {
+          begin: begin
+        };
+        if (this.buffer != null) {
+          frame.buffers = [this.buffer.slice(begin, begin + this.frameLength)];
+        }
+        this.frameOffsets.push(frame);
+      }
+    }
+
+    Image.prototype._getFrame = function(buffer, bitpix, bzero, bscale) {
+      var arr, bytes, dataType, i, nPixels, swapEndian, tmp, value;
+      bytes = Math.abs(bitpix) / 8;
+      nPixels = i = buffer.byteLength / bytes;
+      dataType = Math.abs(bitpix);
+      if (bitpix > 0) {
+        switch (bitpix) {
+          case 8:
+            tmp = new Uint8Array(buffer);
+            tmp = new Uint16Array(tmp);
+            swapEndian = function(value) {
+              return value;
+            };
+            break;
+          case 16:
+            tmp = new Int16Array(buffer);
+            swapEndian = function(value) {
+              return ((value & 0xFF) << 8) | ((value >> 8) & 0xFF);
+            };
+            break;
+          case 32:
+            tmp = new Int32Array(buffer);
+            swapEndian = function(value) {
+              return ((value & 0xFF) << 24) | ((value & 0xFF00) << 8) | ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF);
+            };
+        }
+        if (!(parseInt(bzero) === bzero && parseInt(bscale) === bscale)) {
+          arr = new Float32Array(tmp.length);
+        } else {
+          arr = tmp;
+        }
+        while (nPixels--) {
+          tmp[nPixels] = swapEndian(tmp[nPixels]);
+          arr[nPixels] = bzero + bscale * tmp[nPixels];
+        }
+      } else {
+        arr = new Uint32Array(buffer);
+        swapEndian = function(value) {
+          return ((value & 0xFF) << 24) | ((value & 0xFF00) << 8) | ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF);
+        };
+        while (i--) {
+          value = arr[i];
+          arr[i] = swapEndian(value);
+        }
+        arr = new Float32Array(buffer);
+        while (nPixels--) {
+          arr[nPixels] = bzero + bscale * arr[nPixels];
+        }
+      }
+      return arr;
+    };
+
+    Image.prototype._getFrameAsync = function(buffers, callback, opts) {
+      var URL, blobGetFrame, blobOnMessage, fn1, fn2, i, mime, msg, onmessage, pixels, start, urlGetFrame, urlOnMessage, worker,
+        _this = this;
+      onmessage = function(e) {
+        var arr, bitpix, bscale, buffer, bzero, data, url;
+        data = e.data;
+        buffer = data.buffer;
+        bitpix = data.bitpix;
+        bzero = data.bzero;
+        bscale = data.bscale;
+        url = data.url;
+        importScripts(url);
+        arr = _getFrame(buffer, bitpix, bzero, bscale);
+        return postMessage(arr);
+      };
+      fn1 = onmessage.toString().replace('return postMessage', 'postMessage');
+      fn1 = "onmessage = " + fn1;
+      fn2 = this._getFrame.toString();
+      fn2 = fn2.replace('function', 'function _getFrame');
+      mime = "application/javascript";
+      blobOnMessage = new Blob([fn1], {
+        type: mime
+      });
+      blobGetFrame = new Blob([fn2], {
+        type: mime
+      });
+      URL = window.URL || window.webkitURL;
+      urlOnMessage = URL.createObjectURL(blobOnMessage);
+      urlGetFrame = URL.createObjectURL(blobGetFrame);
+      worker = new Worker(urlOnMessage);
+      msg = {
+        buffer: buffers[0],
+        bitpix: this.bitpix,
+        bzero: this.bzero,
+        bscale: this.bscale,
+        url: urlGetFrame
+      };
+      i = 0;
+      pixels = null;
+      start = 0;
+      worker.onmessage = function(e) {
+        var arr;
+        arr = e.data;
+        if (pixels == null) {
+          pixels = new arr.constructor(_this.width * _this.height);
+        }
+        pixels.set(arr, start);
+        start += arr.length;
+        i += 1;
+        if (i === _this.nBuffers) {
+          _this.invoke(callback, opts, pixels);
+          URL.revokeObjectURL(urlOnMessage);
+          URL.revokeObjectURL(urlGetFrame);
+          return worker.terminate();
+        } else {
+          msg.buffer = buffers[i];
+          return worker.postMessage(msg, [buffers[i]]);
+        }
+      };
+      worker.postMessage(msg, [buffers[0]]);
+    };
+
+    Image.prototype.getFrame = function(frame, callback, opts) {
+      var begin, blobFrame, blobs, buffers, bytesPerBuffer, frameInfo, i, nRowsPerBuffer, reader, start, _i, _ref,
+        _this = this;
+      this.frame = frame || this.frame;
+      frameInfo = this.frameOffsets[this.frame];
+      buffers = frameInfo.buffers;
+      if ((buffers != null ? buffers.length : void 0) === this.nBuffers) {
+        return this._getFrameAsync(buffers, callback, opts);
+      } else {
+        this.frameOffsets[this.frame].buffers = [];
+        begin = frameInfo.begin;
+        blobFrame = this.blob.slice(begin, begin + this.frameLength);
+        blobs = [];
+        nRowsPerBuffer = Math.floor(this.height / this.nBuffers);
+        bytesPerBuffer = nRowsPerBuffer * this.bytes * this.width;
+        for (i = _i = 0, _ref = this.nBuffers - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
+          start = i * bytesPerBuffer;
+          if (i === this.nBuffers - 1) {
+            blobs.push(blobFrame.slice(start));
+          } else {
+            blobs.push(blobFrame.slice(start, start + bytesPerBuffer));
+          }
+        }
+        buffers = [];
+        reader = new FileReader();
+        reader.frame = this.frame;
+        i = 0;
+        reader.onloadend = function(e) {
+          var buffer;
+          frame = e.target.frame;
+          buffer = e.target.result;
+          _this.frameOffsets[frame].buffers.push(buffer);
+          i += 1;
+          if (i === _this.nBuffers) {
+            return _this.getFrame(frame, callback, opts);
+          } else {
+            return reader.readAsArrayBuffer(blobs[i]);
+          }
+        };
+        return reader.readAsArrayBuffer(blobs[0]);
+      }
+    };
+
+    Image.prototype.getFrames = function(frame, number, callback, opts) {
+      var cb,
+        _this = this;
+      cb = function(arr, opts) {
+        _this.invoke(callback, opts, arr);
+        number -= 1;
+        frame += 1;
+        if (!number) {
+          return;
+        }
+        return _this.getFrame(frame, cb, opts);
+      };
+      return this.getFrame(frame, cb, opts);
+    };
+
+    Image.prototype.isDataCube = function() {
+      if (this.naxis.length > 2) {
+        return true;
+      } else {
+        return false;
+      }
+    };
+
+    return Image;
+
+  })(DataUnit);
+
+  this.astro.FITS.Image = Image;
+
+  Tabular = (function(_super) {
+    __extends(Tabular, _super);
+
+    Tabular.prototype.maxMemory = 1048576;
+
+    function Tabular(header, data) {
+      Tabular.__super__.constructor.apply(this, arguments);
+      this.rowByteSize = header.get("NAXIS1");
+      this.rows = header.get("NAXIS2");
+      this.cols = header.get("TFIELDS");
+      this.length = this.rowByteSize * this.rows;
+      this.heapLength = header.get("PCOUNT");
+      this.columns = this.getColumns(header);
+      if (this.buffer != null) {
+        this.rowsInMemory = this._rowsInMemoryBuffer;
+        this.heap = this.buffer.slice(this.length, this.length + this.heapLength);
+      } else {
+        this.rowsInMemory = this._rowsInMemoryBlob;
+        this.firstRowInBuffer = this.lastRowInBuffer = 0;
+        this.nRowsInBuffer = Math.floor(this.maxMemory / this.rowByteSize);
+      }
+      this.accessors = [];
+      this.descriptors = [];
+      this.elementByteLengths = [];
+      this.setAccessors(header);
+    }
+
+    Tabular.prototype._rowsInMemoryBuffer = function() {
+      return true;
+    };
+
+    Tabular.prototype._rowsInMemoryBlob = function(firstRow, lastRow) {
+      if (firstRow < this.firstRowInBuffer) {
+        return false;
+      }
+      if (lastRow > this.lastRowInBuffer) {
+        return false;
+      }
+      return true;
+    };
+
+    Tabular.prototype.getColumns = function(header) {
+      var columns, i, key, _i, _ref;
+      columns = [];
+      for (i = _i = 1, _ref = this.cols; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
+        key = "TTYPE" + i;
+        if (!header.contains(key)) {
+          return null;
+        }
+        columns.push(header.get(key));
+      }
+      return columns;
+    };
+
+    Tabular.prototype.getColumn = function(name, callback, opts) {
+      var accessor, cb, column, descriptor, elementByteLength, elementByteOffset, factor, i, index, iterations, rowsPerIteration,
+        _this = this;
+      if (this.blob != null) {
+        index = this.columns.indexOf(name);
+        descriptor = this.descriptors[index];
+        accessor = this.accessors[index];
+        elementByteLength = this.elementByteLengths[index];
+        elementByteOffset = this.elementByteLengths.slice(0, index);
+        if (elementByteOffset.length === 0) {
+          elementByteOffset = 0;
+        } else {
+          elementByteOffset = elementByteOffset.reduce(function(a, b) {
+            return a + b;
+          });
+        }
+        column = this.typedArray[descriptor] != null ? new this.typedArray[descriptor](this.rows) : [];
+        rowsPerIteration = ~~(this.maxMemory / this.rowByteSize);
+        rowsPerIteration = Math.min(rowsPerIteration, this.rows);
+        factor = this.rows / rowsPerIteration;
+        iterations = Math.floor(factor) === factor ? factor : Math.floor(factor) + 1;
+        i = 0;
+        index = 0;
+        cb = function(buffer, opts) {
+          var nRows, offset, startRow, view;
+          nRows = buffer.byteLength / _this.rowByteSize;
+          view = new DataView(buffer);
+          offset = elementByteOffset;
+          while (nRows--) {
+            column[i] = accessor(view, offset)[0];
+            i += 1;
+            offset += _this.rowByteSize;
+          }
+          iterations -= 1;
+          index += 1;
+          if (iterations) {
+            startRow = index * rowsPerIteration;
+            return _this.getTableBuffer(startRow, rowsPerIteration, cb, opts);
+          } else {
+            _this.invoke(callback, opts, column);
+          }
+        };
+        return this.getTableBuffer(0, rowsPerIteration, cb, opts);
+      } else {
+        cb = function(rows, opts) {
+          column = rows.map(function(d) {
+            return d[name];
+          });
+          return _this.invoke(callback, opts, column);
+        };
+        return this.getRows(0, this.rows, cb, opts);
+      }
+    };
+
+    Tabular.prototype.getTableBuffer = function(row, number, callback, opts) {
+      var begin, blobRows, end, reader,
+        _this = this;
+      number = Math.min(this.rows - row, number);
+      begin = row * this.rowByteSize;
+      end = begin + number * this.rowByteSize;
+      blobRows = this.blob.slice(begin, end);
+      reader = new FileReader();
+      reader.row = row;
+      reader.number = number;
+      reader.onloadend = function(e) {
+        return _this.invoke(callback, opts, e.target.result);
+      };
+      return reader.readAsArrayBuffer(blobRows);
+    };
+
+    Tabular.prototype.getRows = function(row, number, callback, opts) {
+      var begin, blobRows, buffer, end, reader, rows,
+        _this = this;
+      if (this.rowsInMemory(row, row + number)) {
+        if (this.blob != null) {
+          buffer = this.buffer;
+        } else {
+          begin = row * this.rowByteSize;
+          end = begin + number * this.rowByteSize;
+          buffer = this.buffer.slice(begin, end);
+        }
+        rows = this._getRows(buffer, number);
+        this.invoke(callback, opts, rows);
+        return rows;
+      } else {
+        begin = row * this.rowByteSize;
+        end = begin + Math.max(this.nRowsInBuffer * this.rowByteSize, number * this.rowByteSize);
+        blobRows = this.blob.slice(begin, end);
+        reader = new FileReader();
+        reader.row = row;
+        reader.number = number;
+        reader.onloadend = function(e) {
+          var target;
+          target = e.target;
+          _this.buffer = target.result;
+          _this.firstRowInBuffer = _this.lastRowInBuffer = target.row;
+          _this.lastRowInBuffer += target.number;
+          return _this.getRows(row, number, callback, opts);
+        };
+        return reader.readAsArrayBuffer(blobRows);
+      }
+    };
+
+    return Tabular;
+
+  })(DataUnit);
+
+  this.astro.FITS.Tabular = Tabular;
+
+  Table = (function(_super) {
+    __extends(Table, _super);
+
+    function Table() {
+      _ref = Table.__super__.constructor.apply(this, arguments);
+      return _ref;
+    }
+
+    Table.prototype.dataAccessors = {
+      A: function(value) {
+        return value.trim();
+      },
+      I: function(value) {
+        return parseInt(value);
+      },
+      F: function(value) {
+        return parseFloat(value);
+      },
+      E: function(value) {
+        return parseFloat(value);
+      },
+      D: function(value) {
+        return parseFloat(value);
+      }
+    };
+
+    Table.prototype.setAccessors = function(header) {
+      var descriptor, form, i, match, pattern, type, _i, _ref1, _results,
+        _this = this;
+      pattern = /([AIFED])(\d+)\.*(\d+)*/;
+      _results = [];
+      for (i = _i = 1, _ref1 = this.cols; 1 <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = 1 <= _ref1 ? ++_i : --_i) {
+        form = header.get("TFORM" + i);
+        type = header.get("TTYPE" + i);
+        match = pattern.exec(form);
+        descriptor = match[1];
+        _results.push((function(descriptor) {
+          var accessor;
+          accessor = function(value) {
+            return _this.dataAccessors[descriptor](value);
+          };
+          return _this.accessors.push(accessor);
+        })(descriptor));
+      }
+      return _results;
+    };
+
+    Table.prototype._getRows = function(buffer) {
+      var accessor, arr, begin, end, i, index, line, nRows, row, rows, subarray, value, _i, _j, _k, _len, _len1, _ref1, _ref2;
+      nRows = buffer.byteLength / this.rowByteSize;
+      arr = new Uint8Array(buffer);
+      rows = [];
+      for (i = _i = 0, _ref1 = nRows - 1; 0 <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = 0 <= _ref1 ? ++_i : --_i) {
+        begin = i * this.rowByteSize;
+        end = begin + this.rowByteSize;
+        subarray = arr.subarray(begin, end);
+        line = '';
+        for (_j = 0, _len = subarray.length; _j < _len; _j++) {
+          value = subarray[_j];
+          line += String.fromCharCode(value);
+        }
+        line = line.trim().split(/\s+/);
+        row = {};
+        _ref2 = this.accessors;
+        for (index = _k = 0, _len1 = _ref2.length; _k < _len1; index = ++_k) {
+          accessor = _ref2[index];
+          value = line[index];
+          row[this.columns[index]] = accessor(value);
+        }
+        rows.push(row);
+      }
+      return rows;
+    };
+
+    return Table;
+
+  })(Tabular);
+
+  this.astro.FITS.Table = Table;
+
+  BinaryTable = (function(_super) {
+    __extends(BinaryTable, _super);
+
+    function BinaryTable() {
+      _ref1 = BinaryTable.__super__.constructor.apply(this, arguments);
+      return _ref1;
+    }
+
+    BinaryTable.prototype.typedArray = {
+      B: Uint8Array,
+      I: Uint16Array,
+      J: Uint32Array,
+      E: Float32Array,
+      D: Float64Array,
+      1: Uint8Array,
+      2: Uint16Array,
+      4: Uint32Array
+    };
+
+    BinaryTable.offsets = {
+      L: 1,
+      B: 1,
+      I: 2,
+      J: 4,
+      K: 8,
+      A: 1,
+      E: 4,
+      D: 8,
+      C: 8,
+      M: 16
+    };
+
+    BinaryTable.prototype.dataAccessors = {
+      L: function(view, offset) {
+        var val, x;
+        x = view.getInt8(offset);
+        offset += 1;
+        val = x === 84 ? true : false;
+        return [val, offset];
+      },
+      B: function(view, offset) {
+        var val;
+        val = view.getUint8(offset);
+        offset += 1;
+        return [val, offset];
+      },
+      I: function(view, offset) {
+        var val;
+        val = view.getInt16(offset);
+        offset += 2;
+        return [val, offset];
+      },
+      J: function(view, offset) {
+        var val;
+        val = view.getInt32(offset);
+        offset += 4;
+        return [val, offset];
+      },
+      K: function(view, offset) {
+        var factor, highByte, lowByte, mod, val;
+        highByte = Math.abs(view.getInt32(offset));
+        offset += 4;
+        lowByte = Math.abs(view.getInt32(offset));
+        offset += 4;
+        mod = highByte % 10;
+        factor = mod ? -1 : 1;
+        highByte -= mod;
+        val = factor * ((highByte << 32) | lowByte);
+        return [val, offset];
+      },
+      A: function(view, offset) {
+        var val;
+        val = view.getUint8(offset);
+        val = String.fromCharCode(val);
+        offset += 1;
+        return [val, offset];
+      },
+      E: function(view, offset) {
+        var val;
+        val = view.getFloat32(offset);
+        offset += 4;
+        return [val, offset];
+      },
+      D: function(view, offset) {
+        var val;
+        val = view.getFloat64(offset);
+        offset += 8;
+        return [val, offset];
+      },
+      C: function(view, offset) {
+        var val, val1, val2;
+        val1 = view.getFloat32(offset);
+        offset += 4;
+        val2 = view.getFloat32(offset);
+        offset += 4;
+        val = [val1, val2];
+        return [val, offset];
+      },
+      M: function(view, offset) {
+        var val, val1, val2;
+        val1 = view.getFloat64(offset);
+        offset += 8;
+        val2 = view.getFloat64(offset);
+        offset += 8;
+        val = [val1, val2];
+        return [val, offset];
+      }
+    };
+
+    BinaryTable.prototype.toBits = function(byte) {
+      var arr, i;
+      arr = [];
+      i = 128;
+      while (i >= 1) {
+        arr.push((byte & i ? 1 : 0));
+        i /= 2;
+      }
+      return arr;
+    };
+
+    BinaryTable.prototype.getFromHeap = function(view, offset, descriptor) {
+      var arr, heapOffset, heapSlice, i, length;
+      length = view.getInt32(offset);
+      offset += 4;
+      heapOffset = view.getInt32(offset);
+      offset += 4;
+      heapSlice = this.heap.slice(heapOffset, heapOffset + length);
+      arr = new this.typedArray[descriptor](heapSlice);
+      i = arr.length;
+      while (i--) {
+        arr[i] = this.constructor.swapEndian[descriptor](arr[i]);
+      }
+      return [arr, offset];
+    };
+
+    BinaryTable.prototype.setAccessors = function(header) {
+      var count, descriptor, form, i, isArray, match, pattern, type, _i, _ref2, _results,
+        _this = this;
+      pattern = /(\d*)([P|Q]*)([L|X|B|I|J|K|A|E|D|C|M]{1})/;
+      _results = [];
+      for (i = _i = 1, _ref2 = this.cols; 1 <= _ref2 ? _i <= _ref2 : _i >= _ref2; i = 1 <= _ref2 ? ++_i : --_i) {
+        form = header.get("TFORM" + i);
+        type = header.get("TTYPE" + i);
+        match = pattern.exec(form);
+        count = parseInt(match[1]) || 1;
+        isArray = match[2];
+        descriptor = match[3];
+        _results.push((function(descriptor, count) {
+          var accessor, nBytes;
+          _this.descriptors.push(descriptor);
+          _this.elementByteLengths.push(_this.constructor.offsets[descriptor] * count);
+          if (isArray) {
+            switch (type) {
+              case "COMPRESSED_DATA":
+                accessor = function(view, offset) {
+                  var arr, pixels, _ref3;
+                  _ref3 = _this.getFromHeap(view, offset, descriptor), arr = _ref3[0], offset = _ref3[1];
+                  pixels = new _this.typedArray[_this.algorithmParameters["BYTEPIX"]](_this.ztile[0]);
+                  Decompress.Rice(arr, _this.algorithmParameters["BLOCKSIZE"], _this.algorithmParameters["BYTEPIX"], pixels, _this.ztile[0], Decompress.RiceSetup);
+                  return [pixels, offset];
+                };
+                break;
+              case "GZIP_COMPRESSED_DATA":
+                accessor = function(view, offset) {
+                  var arr;
+                  arr = new Float32Array(_this.width);
+                  i = arr.length;
+                  while (i--) {
+                    arr[i] = NaN;
+                  }
+                  return [arr, offset];
+                };
+                break;
+              default:
+                accessor = function(view, offset) {
+                  return _this.getFromHeap(view, offset, descriptor);
+                };
+            }
+          } else {
+            if (count === 1) {
+              accessor = function(view, offset) {
+                var value, _ref3;
+                _ref3 = _this.dataAccessors[descriptor](view, offset), value = _ref3[0], offset = _ref3[1];
+                return [value, offset];
+              };
+            } else {
+              if (descriptor === 'X') {
+                nBytes = Math.log(count) / Math.log(2);
+                accessor = function(view, offset) {
+                  var arr, bits, buffer, byte, bytes, _j, _len;
+                  buffer = view.buffer.slice(offset, offset + nBytes);
+                  bytes = new Uint8Array(buffer);
+                  bits = [];
+                  for (_j = 0, _len = bytes.length; _j < _len; _j++) {
+                    byte = bytes[_j];
+                    arr = _this.toBits(byte);
+                    bits = bits.concat(arr);
+                  }
+                  offset += nBytes;
+                  return [bits.slice(0, +(count - 1) + 1 || 9e9), offset];
+                };
+              } else if (descriptor === 'A') {
+                accessor = function(view, offset) {
+                  var arr, buffer, s, value, _j, _len;
+                  buffer = view.buffer.slice(offset, offset + count);
+                  arr = new Uint8Array(buffer);
+                  s = '';
+                  for (_j = 0, _len = arr.length; _j < _len; _j++) {
+                    value = arr[_j];
+                    s += String.fromCharCode(value);
+                  }
+                  s = s.trim();
+                  offset += count;
+                  return [s, offset];
+                };
+              } else {
+                accessor = function(view, offset) {
+                  var data, value, _ref3;
+                  i = count;
+                  data = [];
+                  while (i--) {
+                    _ref3 = _this.dataAccessors[descriptor](view, offset), value = _ref3[0], offset = _ref3[1];
+                    data.push(value);
+                  }
+                  return [data, offset];
+                };
+              }
+            }
+          }
+          return _this.accessors.push(accessor);
+        })(descriptor, count));
+      }
+      return _results;
+    };
+
+    BinaryTable.prototype._getRows = function(buffer, nRows) {
+      var accessor, index, offset, row, rows, value, view, _i, _len, _ref2, _ref3;
+      view = new DataView(buffer);
+      offset = 0;
+      rows = [];
+      while (nRows--) {
+        row = {};
+        _ref2 = this.accessors;
+        for (index = _i = 0, _len = _ref2.length; _i < _len; index = ++_i) {
+          accessor = _ref2[index];
+          _ref3 = accessor(view, offset), value = _ref3[0], offset = _ref3[1];
+          row[this.columns[index]] = value;
+        }
+        rows.push(row);
+      }
+      return rows;
+    };
+
+    return BinaryTable;
+
+  })(Tabular);
+
+  this.astro.FITS.BinaryTable = BinaryTable;
+
+  Decompress = {
+    RiceSetup: {
+      1: function(array) {
+        var fsbits, fsmax, lastpix, pointer;
+        pointer = 1;
+        fsbits = 3;
+        fsmax = 6;
+        lastpix = array[0];
+        return [fsbits, fsmax, lastpix, pointer];
+      },
+      2: function(array) {
+        var bytevalue, fsbits, fsmax, lastpix, pointer;
+        pointer = 2;
+        fsbits = 4;
+        fsmax = 14;
+        lastpix = 0;
+        bytevalue = array[0];
+        lastpix = lastpix | (bytevalue << 8);
+        bytevalue = array[1];
+        lastpix = lastpix | bytevalue;
+        return [fsbits, fsmax, lastpix, pointer];
+      },
+      4: function(array) {
+        var bytevalue, fsbits, fsmax, lastpix, pointer;
+        pointer = 4;
+        fsbits = 5;
+        fsmax = 25;
+        lastpix = 0;
+        bytevalue = array[0];
+        lastpix = lastpix | (bytevalue << 24);
+        bytevalue = array[1];
+        lastpix = lastpix | (bytevalue << 16);
+        bytevalue = array[2];
+        lastpix = lastpix | (bytevalue << 8);
+        bytevalue = array[3];
+        lastpix = lastpix | bytevalue;
+        return [fsbits, fsmax, lastpix, pointer];
+      }
+    },
+    Rice: function(array, blocksize, bytepix, pixels, nx, setup) {
+      var b, bbits, diff, fs, fsbits, fsmax, i, imax, k, lastpix, nbits, nonzeroCount, nzero, pointer, _ref2, _ref3;
+      bbits = 1 << fsbits;
+      _ref2 = setup[bytepix](array), fsbits = _ref2[0], fsmax = _ref2[1], lastpix = _ref2[2], pointer = _ref2[3];
+      nonzeroCount = new Uint8Array(256);
+      nzero = 8;
+      _ref3 = [128, 255], k = _ref3[0], i = _ref3[1];
+      while (i >= 0) {
+        while (i >= k) {
+          nonzeroCount[i] = nzero;
+          i -= 1;
+        }
+        k = k / 2;
+        nzero -= 1;
+      }
+      nonzeroCount[0] = 0;
+      b = array[pointer++];
+      nbits = 8;
+      i = 0;
+      while (i < nx) {
+        nbits -= fsbits;
+        while (nbits < 0) {
+          b = (b << 8) | array[pointer++];
+          nbits += 8;
+        }
+        fs = (b >> nbits) - 1;
+        b &= (1 << nbits) - 1;
+        imax = i + blocksize;
+        if (imax > nx) {
+          imax = nx;
+        }
+        if (fs < 0) {
+          while (i < imax) {
+            pixels[i] = lastpix;
+            i += 1;
+          }
+        } else if (fs === fsmax) {
+          while (i < imax) {
+            k = bbits - nbits;
+            diff = b << k;
+            k -= 8;
+            while (k >= 0) {
+              b = array[pointer++];
+              diff |= b << k;
+              k -= 8;
+            }
+            if (nbits > 0) {
+              b = array[pointer++];
+              diff |= b >> (-k);
+              b &= (1 << nbits) - 1;
+            } else {
+              b = 0;
+            }
+            if ((diff & 1) === 0) {
+              diff = diff >> 1;
+            } else {
+              diff = ~(diff >> 1);
+            }
+            pixels[i] = diff + lastpix;
+            lastpix = pixels[i];
+            i++;
+          }
+        } else {
+          while (i < imax) {
+            while (b === 0) {
+              nbits += 8;
+              b = array[pointer++];
+            }
+            nzero = nbits - nonzeroCount[b];
+            nbits -= nzero + 1;
+            b ^= 1 << nbits;
+            nbits -= fs;
+            while (nbits < 0) {
+              b = (b << 8) | array[pointer++];
+              nbits += 8;
+            }
+            diff = (nzero << fs) | (b >> nbits);
+            b &= (1 << nbits) - 1;
+            if ((diff & 1) === 0) {
+              diff = diff >> 1;
+            } else {
+              diff = ~(diff >> 1);
+            }
+            pixels[i] = diff + lastpix;
+            lastpix = pixels[i];
+            i++;
+          }
+        }
+      }
+      return pixels;
+    }
+  };
+
+  this.astro.FITS.Decompress = Decompress;
+
+  CompressedImage = (function(_super) {
+    __extends(CompressedImage, _super);
+
+    CompressedImage.include(ImageUtils);
+
+    CompressedImage.extend(Decompress);
+
+    CompressedImage.randomGenerator = function() {
+      var a, i, m, random, seed, temp, _i;
+      a = 16807;
+      m = 2147483647;
+      seed = 1;
+      random = new Float32Array(10000);
+      for (i = _i = 0; _i <= 9999; i = ++_i) {
+        temp = a * seed;
+        seed = temp - m * parseInt(temp / m);
+        random[i] = seed / m;
+      }
+      return random;
+    };
+
+    CompressedImage.randomSequence = CompressedImage.randomGenerator();
+
+    function CompressedImage(header, data) {
+      var i, key, value, ztile, _i, _ref2;
+      CompressedImage.__super__.constructor.apply(this, arguments);
+      this.zcmptype = header.get("ZCMPTYPE");
+      this.zbitpix = header.get("ZBITPIX");
+      this.znaxis = header.get("ZNAXIS");
+      this.zblank = header.get("ZBLANK");
+      this.blank = header.get("BLANK");
+      this.zdither = header.get('ZDITHER0') || 0;
+      this.ztile = [];
+      for (i = _i = 1, _ref2 = this.znaxis; 1 <= _ref2 ? _i <= _ref2 : _i >= _ref2; i = 1 <= _ref2 ? ++_i : --_i) {
+        ztile = header.contains("ZTILE" + i) ? header.get("ZTILE" + i) : i === 1 ? header.get("ZNAXIS1") : 1;
+        this.ztile.push(ztile);
+      }
+      this.width = header.get("ZNAXIS1");
+      this.height = header.get("ZNAXIS2") || 1;
+      this.algorithmParameters = {};
+      if (this.zcmptype === 'RICE_1') {
+        this.algorithmParameters["BLOCKSIZE"] = 32;
+        this.algorithmParameters["BYTEPIX"] = 4;
+      }
+      i = 1;
+      while (true) {
+        key = "ZNAME" + i;
+        if (!header.contains(key)) {
+          break;
+        }
+        value = "ZVAL" + i;
+        this.algorithmParameters[header.get(key)] = header.get(value);
+        i += 1;
+      }
+      this.zmaskcmp = header.get("ZMASKCMP");
+      this.zquantiz = header.get("ZQUANTIZ") || "LINEAR_SCALING";
+      this.bzero = header.get("BZERO") || 0;
+      this.bscale = header.get("BSCALE") || 1;
+    }
+
+    CompressedImage.prototype._getRows = function(buffer, nRows) {
+      var accessor, arr, blank, data, i, index, nTile, offset, r, rIndex, row, scale, seed0, seed1, value, view, zero, _i, _j, _len, _len1, _ref2, _ref3;
+      view = new DataView(buffer);
+      offset = 0;
+      arr = new Float32Array(this.width * this.height);
+      while (nRows--) {
+        row = {};
+        _ref2 = this.accessors;
+        for (index = _i = 0, _len = _ref2.length; _i < _len; index = ++_i) {
+          accessor = _ref2[index];
+          _ref3 = accessor(view, offset), value = _ref3[0], offset = _ref3[1];
+          row[this.columns[index]] = value;
+        }
+        data = row['COMPRESSED_DATA'] || row['UNCOMPRESSED_DATA'] || row['GZIP_COMPRESSED_DATA'];
+        blank = row['ZBLANK'] || this.zblank;
+        scale = row['ZSCALE'] || this.bscale;
+        zero = row['ZZERO'] || this.bzero;
+        nTile = this.height - nRows;
+        seed0 = nTile + this.zdither - 1;
+        seed1 = (seed0 - 1) % 10000;
+        rIndex = parseInt(this.constructor.randomSequence[seed1] * 500);
+        for (index = _j = 0, _len1 = data.length; _j < _len1; index = ++_j) {
+          value = data[index];
+          i = (nTile - 1) * this.width + index;
+          if (value === -2147483647) {
+            arr[i] = NaN;
+          } else if (value === -2147483646) {
+            arr[i] = 0;
+          } else {
+            r = this.constructor.randomSequence[rIndex];
+            arr[i] = (value - r + 0.5) * scale + zero;
+          }
+          rIndex += 1;
+          if (rIndex === 10000) {
+            seed1 = (seed1 + 1) % 10000;
+            rIndex = parseInt(this.randomSequence[seed1] * 500);
+          }
+        }
+      }
+      return arr;
+    };
+
+    CompressedImage.prototype.getFrame = function(nFrame, callback, opts) {
+      var heapBlob, reader,
+        _this = this;
+      if (this.heap) {
+        this.frame = nFrame || this.frame;
+        return this.getRows(0, this.rows, callback, opts);
+      } else {
+        heapBlob = this.blob.slice(this.length, this.length + this.heapLength);
+        reader = new FileReader();
+        reader.onloadend = function(e) {
+          _this.heap = e.target.result;
+          return _this.getFrame(nFrame, callback, opts);
+        };
+        return reader.readAsArrayBuffer(heapBlob);
+      }
+    };
+
+    return CompressedImage;
+
+  })(BinaryTable);
+
+  this.astro.FITS.CompressedImage = CompressedImage;
+
+  HDU = (function() {
+    function HDU(header, data) {
+      this.header = header;
+      this.data = data;
+    }
+
+    HDU.prototype.hasData = function() {
+      if (this.data != null) {
+        return true;
+      } else {
+        return false;
+      }
+    };
+
+    return HDU;
+
+  })();
+
+  this.astro.FITS.HDU = HDU;
+
+}).call(this);
diff --git a/src/js/healpix.min.js b/src/js/libs/healpix.min.js
similarity index 100%
rename from src/js/healpix.min.js
rename to src/js/libs/healpix.min.js
diff --git a/src/js/libs/jquery-1.9.1.min.js b/src/js/libs/jquery-1.9.1.min.js
new file mode 100644
index 0000000..006e953
--- /dev/null
+++ b/src/js/libs/jquery-1.9.1.min.js
@@ -0,0 +1,5 @@
+/*! jQuery v1.9.1 | (c) 2005, 2012 jQuery Foundation, Inc. | jquery.org/license
+//@ sourceMappingURL=jquery.min.map
+*/(function(e,t){var n,r,i=typeof t,o=e.document,a=e.location,s=e.jQuery,u=e.$,l={},c=[],p="1.9.1",f=c.concat,d=c.push,h=c.slice,g=c.indexOf,m=l.toString,y=l.hasOwnProperty,v=p.trim,b=function(e,t){return new b.fn.init(e,t,r)},x=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,w=/\S+/g,T=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,N=/^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,C=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,k=/^[\],:{}\s]*$/,E=/(?:^|:|,)(?:\s*\[)+/g,S=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,A=/"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,j=/^-ms-/,D=/-([\da-z])/gi,L=function(e,t){return t.toUpperCase()},H=function(e){(o.addEventListener||"load"===e.type||"complete"===o.readyState)&&(q(),b.ready())},q=function(){o.addEventListener?(o.removeEventListener("DOMContentLoaded",H,!1),e.removeEventListener("load",H,!1)):(o.detachEvent("onreadystatechange",H),e.detachEvent("onload",H))};b.fn=b.prototype={jquery:p,constructor:b,init:function(e,n,r){var i,a;if(!e)return this;if("string"==typeof e){if(i="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof b?n[0]:n,b.merge(this,b.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:o,!0)),C.test(i[1])&&b.isPlainObject(n))for(i in n)b.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(a=o.getElementById(i[2]),a&&a.parentNode){if(a.id!==i[2])return r.find(e);this.length=1,this[0]=a}return this.context=o,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):b.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),b.makeArray(e,this))},selector:"",length:0,size:function(){return this.length},toArray:function(){return h.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=b.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return b.each(this,e,t)},ready:function(e){return b.ready.promise().done(e),this},slice:function(){return this.pushStack(h.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(b.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:d,sort:[].sort,splice:[].splice},b.fn.init.prototype=b.fn,b.extend=b.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},u=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[1]||{},u=2),"object"==typeof s||b.isFunction(s)||(s={}),l===u&&(s=this,--u);l>u;u++)if(null!=(o=arguments[u]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(b.isPlainObject(r)||(n=b.isArray(r)))?(n?(n=!1,a=e&&b.isArray(e)?e:[]):a=e&&b.isPlainObject(e)?e:{},s[i]=b.extend(c,a,r)):r!==t&&(s[i]=r));return s},b.extend({noConflict:function(t){return e.$===b&&(e.$=u),t&&e.jQuery===b&&(e.jQuery=s),b},isReady:!1,readyWait:1,holdReady:function(e){e?b.readyWait++:b.ready(!0)},ready:function(e){if(e===!0?!--b.readyWait:!b.isReady){if(!o.body)return setTimeout(b.ready);b.isReady=!0,e!==!0&&--b.readyWait>0||(n.resolveWith(o,[b]),b.fn.trigger&&b(o).trigger("ready").off("ready"))}},isFunction:function(e){return"function"===b.type(e)},isArray:Array.isArray||function(e){return"array"===b.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?l[m.call(e)]||"object":typeof e},isPlainObject:function(e){if(!e||"object"!==b.type(e)||e.nodeType||b.isWindow(e))return!1;try{if(e.constructor&&!y.call(e,"constructor")&&!y.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}var r;for(r in e);return r===t||y.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||o;var r=C.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=b.buildFragment([e],t,i),i&&b(i).remove(),b.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:"string"==typeof n&&(n=b.trim(n),n&&k.test(n.replace(S,"@").replace(A,"]").replace(E,"")))?Function("return "+n)():(b.error("Invalid JSON: "+n),t)},parseXML:function(n){var r,i;if(!n||"string"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName("parsererror").length||b.error("Invalid XML: "+n),r},noop:function(){},globalEval:function(t){t&&b.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(j,"ms-").replace(D,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:v&&!v.call("\ufeff\u00a0")?function(e){return null==e?"":v.call(e)}:function(e){return null==e?"":(e+"").replace(T,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?b.merge(n,"string"==typeof e?[e]:e):d.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(g)return g.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if("number"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return f.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return"string"==typeof n&&(o=e[n],n=e,e=o),b.isFunction(e)?(r=h.call(arguments,2),i=function(){return e.apply(n||this,r.concat(h.call(arguments)))},i.guid=e.guid=e.guid||b.guid++,i):t},access:function(e,n,r,i,o,a,s){var u=0,l=e.length,c=null==r;if("object"===b.type(r)){o=!0;for(u in r)b.access(e,n,u,r[u],!0,a,s)}else if(i!==t&&(o=!0,b.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(b(e),n)})),n))for(;l>u;u++)n(e[u],r,s?i:i.call(e[u],u,n(e[u],r)));return o?e:c?n.call(e):l?n(e[0],r):a},now:function(){return(new Date).getTime()}}),b.ready.promise=function(t){if(!n)if(n=b.Deferred(),"complete"===o.readyState)setTimeout(b.ready);else if(o.addEventListener)o.addEventListener("DOMContentLoaded",H,!1),e.addEventListener("load",H,!1);else{o.attachEvent("onreadystatechange",H),e.attachEvent("onload",H);var r=!1;try{r=null==e.frameElement&&o.documentElement}catch(i){}r&&r.doScroll&&function a(){if(!b.isReady){try{r.doScroll("left")}catch(e){return setTimeout(a,50)}q(),b.ready()}}()}return n.promise(t)},b.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){l["[object "+t+"]"]=t.toLowerCase()});function M(e){var t=e.length,n=b.type(e);return b.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===n||"function"!==n&&(0===t||"number"==typeof t&&t>0&&t-1 in e)}r=b(o);var _={};function F(e){var t=_[e]={};return b.each(e.match(w)||[],function(e,n){t[n]=!0}),t}b.Callbacks=function(e){e="string"==typeof e?_[e]||F(e):b.extend({},e);var n,r,i,o,a,s,u=[],l=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=u.length,n=!0;u&&o>a;a++)if(u[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,u&&(l?l.length&&c(l.shift()):r?u=[]:p.disable())},p={add:function(){if(u){var t=u.length;(function i(t){b.each(t,function(t,n){var r=b.type(n);"function"===r?e.unique&&p.has(n)||u.push(n):n&&n.length&&"string"!==r&&i(n)})})(arguments),n?o=u.length:r&&(s=t,c(r))}return this},remove:function(){return u&&b.each(arguments,function(e,t){var r;while((r=b.inArray(t,u,r))>-1)u.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?b.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return u=[],this},disable:function(){return u=l=r=t,this},disabled:function(){return!u},lock:function(){return l=t,r||p.disable(),this},locked:function(){return!l},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],!u||i&&!l||(n?l.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},b.extend({Deferred:function(e){var t=[["resolve","done",b.Callbacks("once memory"),"resolved"],["reject","fail",b.Callbacks("once memory"),"rejected"],["notify","progress",b.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return b.Deferred(function(n){b.each(t,function(t,o){var a=o[0],s=b.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&b.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+"With"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?b.extend(e,r):r}},i={};return r.pipe=r.then,b.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+"With"](this===i?r:this,arguments),this},i[o[0]+"With"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=h.call(arguments),r=n.length,i=1!==r||e&&b.isFunction(e.promise)?r:0,o=1===i?e:b.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?h.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,u,l;if(r>1)for(s=Array(r),u=Array(r),l=Array(r);r>t;t++)n[t]&&b.isFunction(n[t].promise)?n[t].promise().done(a(t,l,n)).fail(o.reject).progress(a(t,u,s)):--i;return i||o.resolveWith(l,n),o.promise()}}),b.support=function(){var t,n,r,a,s,u,l,c,p,f,d=o.createElement("div");if(d.setAttribute("className","t"),d.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=d.getElementsByTagName("*"),r=d.getElementsByTagName("a")[0],!n||!r||!n.length)return{};s=o.createElement("select"),l=s.appendChild(o.createElement("option")),a=d.getElementsByTagName("input")[0],r.style.cssText="top:1px;float:left;opacity:.5",t={getSetAttribute:"t"!==d.className,leadingWhitespace:3===d.firstChild.nodeType,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/top/.test(r.getAttribute("style")),hrefNormalized:"/a"===r.getAttribute("href"),opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:!!a.value,optSelected:l.selected,enctype:!!o.createElement("form").enctype,html5Clone:"<:nav></:nav>"!==o.createElement("nav").cloneNode(!0).outerHTML,boxModel:"CSS1Compat"===o.compatMode,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},a.checked=!0,t.noCloneChecked=a.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!l.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}a=o.createElement("input"),a.setAttribute("value",""),t.input=""===a.getAttribute("value"),a.value="t",a.setAttribute("type","radio"),t.radioValue="t"===a.value,a.setAttribute("checked","t"),a.setAttribute("name","t"),u=o.createDocumentFragment(),u.appendChild(a),t.appendChecked=a.checked,t.checkClone=u.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent("onclick",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c="on"+f,"t"),t[f+"Bubbles"]=c in e||d.attributes[c].expando===!1;return d.style.backgroundClip="content-box",d.cloneNode(!0).style.backgroundClip="",t.clearCloneStyle="content-box"===d.style.backgroundClip,b(function(){var n,r,a,s="padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",u=o.getElementsByTagName("body")[0];u&&(n=o.createElement("div"),n.style.cssText="border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px",u.appendChild(n).appendChild(d),d.innerHTML="<table><tr><td></td><td>t</td></tr></table>",a=d.getElementsByTagName("td"),a[0].style.cssText="padding:0;margin:0;border:0;display:none",p=0===a[0].offsetHeight,a[0].style.display="",a[1].style.display="none",t.reliableHiddenOffsets=p&&0===a[0].offsetHeight,d.innerHTML="",d.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",t.boxSizing=4===d.offsetWidth,t.doesNotIncludeMarginInBodyOffset=1!==u.offsetTop,e.getComputedStyle&&(t.pixelPosition="1%"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable="4px"===(e.getComputedStyle(d,null)||{width:"4px"}).width,r=d.appendChild(o.createElement("div")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width="0",d.style.width="1px",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML="",d.style.cssText=s+"width:1px;padding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display="block",d.innerHTML="<div></div>",d.firstChild.style.width="5px",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(u.style.zoom=1)),u.removeChild(n),n=d=a=r=null)}),n=s=u=l=r=a=null,t}();var O=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,B=/([A-Z])/g;function P(e,n,r,i){if(b.acceptData(e)){var o,a,s=b.expando,u="string"==typeof n,l=e.nodeType,p=l?b.cache:e,f=l?e[s]:e[s]&&s;if(f&&p[f]&&(i||p[f].data)||!u||r!==t)return f||(l?e[s]=f=c.pop()||b.guid++:f=s),p[f]||(p[f]={},l||(p[f].toJSON=b.noop)),("object"==typeof n||"function"==typeof n)&&(i?p[f]=b.extend(p[f],n):p[f].data=b.extend(p[f].data,n)),o=p[f],i||(o.data||(o.data={}),o=o.data),r!==t&&(o[b.camelCase(n)]=r),u?(a=o[n],null==a&&(a=o[b.camelCase(n)])):a=o,a}}function R(e,t,n){if(b.acceptData(e)){var r,i,o,a=e.nodeType,s=a?b.cache:e,u=a?e[b.expando]:b.expando;if(s[u]){if(t&&(o=n?s[u]:s[u].data)){b.isArray(t)?t=t.concat(b.map(t,b.camelCase)):t in o?t=[t]:(t=b.camelCase(t),t=t in o?[t]:t.split(" "));for(r=0,i=t.length;i>r;r++)delete o[t[r]];if(!(n?$:b.isEmptyObject)(o))return}(n||(delete s[u].data,$(s[u])))&&(a?b.cleanData([e],!0):b.support.deleteExpando||s!=s.window?delete s[u]:s[u]=null)}}}b.extend({cache:{},expando:"jQuery"+(p+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(e){return e=e.nodeType?b.cache[e[b.expando]]:e[b.expando],!!e&&!$(e)},data:function(e,t,n){return P(e,t,n)},removeData:function(e,t){return R(e,t)},_data:function(e,t,n){return P(e,t,n,!0)},_removeData:function(e,t){return R(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&b.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute("classid")===t}}),b.fn.extend({data:function(e,n){var r,i,o=this[0],a=0,s=null;if(e===t){if(this.length&&(s=b.data(o),1===o.nodeType&&!b._data(o,"parsedAttrs"))){for(r=o.attributes;r.length>a;a++)i=r[a].name,i.indexOf("data-")||(i=b.camelCase(i.slice(5)),W(o,i,s[i]));b._data(o,"parsedAttrs",!0)}return s}return"object"==typeof e?this.each(function(){b.data(this,e)}):b.access(this,function(n){return n===t?o?W(o,e,b.data(o,e)):null:(this.each(function(){b.data(this,e,n)}),t)},null,n,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){b.removeData(this,e)})}});function W(e,n,r){if(r===t&&1===e.nodeType){var i="data-"+n.replace(B,"-$1").toLowerCase();if(r=e.getAttribute(i),"string"==typeof r){try{r="true"===r?!0:"false"===r?!1:"null"===r?null:+r+""===r?+r:O.test(r)?b.parseJSON(r):r}catch(o){}b.data(e,n,r)}else r=t}return r}function $(e){var t;for(t in e)if(("data"!==t||!b.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}b.extend({queue:function(e,n,r){var i;return e?(n=(n||"fx")+"queue",i=b._data(e,n),r&&(!i||b.isArray(r)?i=b._data(e,n,b.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||"fx";var n=b.queue(e,t),r=n.length,i=n.shift(),o=b._queueHooks(e,t),a=function(){b.dequeue(e,t)};"inprogress"===i&&(i=n.shift(),r--),o.cur=i,i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return b._data(e,n)||b._data(e,n,{empty:b.Callbacks("once memory").add(function(){b._removeData(e,t+"queue"),b._removeData(e,n)})})}}),b.fn.extend({queue:function(e,n){var r=2;return"string"!=typeof e&&(n=e,e="fx",r--),r>arguments.length?b.queue(this[0],e):n===t?this:this.each(function(){var t=b.queue(this,e,n);b._queueHooks(this,e),"fx"===e&&"inprogress"!==t[0]&&b.dequeue(this,e)})},dequeue:function(e){return this.each(function(){b.dequeue(this,e)})},delay:function(e,t){return e=b.fx?b.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,i=1,o=b.Deferred(),a=this,s=this.length,u=function(){--i||o.resolveWith(a,[a])};"string"!=typeof e&&(n=e,e=t),e=e||"fx";while(s--)r=b._data(a[s],e+"queueHooks"),r&&r.empty&&(i++,r.empty.add(u));return u(),o.promise(n)}});var I,z,X=/[\t\r\n]/g,U=/\r/g,V=/^(?:input|select|textarea|button|object)$/i,Y=/^(?:a|area)$/i,J=/^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped)$/i,G=/^(?:checked|selected)$/i,Q=b.support.getSetAttribute,K=b.support.input;b.fn.extend({attr:function(e,t){return b.access(this,b.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){b.removeAttr(this,e)})},prop:function(e,t){return b.access(this,b.prop,e,t,arguments.length>1)},removeProp:function(e){return e=b.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,u="string"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).addClass(e.call(this,t,this.className))});if(u)for(t=(e||"").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(X," "):" ")){o=0;while(i=t[o++])0>r.indexOf(" "+i+" ")&&(r+=i+" ");n.className=b.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=0===arguments.length||"string"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).removeClass(e.call(this,t,this.className))});if(u)for(t=(e||"").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(X," "):"")){o=0;while(i=t[o++])while(r.indexOf(" "+i+" ")>=0)r=r.replace(" "+i+" "," ");n.className=e?b.trim(r):""}return this},toggleClass:function(e,t){var n=typeof e,r="boolean"==typeof t;return b.isFunction(e)?this.each(function(n){b(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if("string"===n){var o,a=0,s=b(this),u=t,l=e.match(w)||[];while(o=l[a++])u=r?u:!s.hasClass(o),s[u?"addClass":"removeClass"](o)}else(n===i||"boolean"===n)&&(this.className&&b._data(this,"__className__",this.className),this.className=this.className||e===!1?"":b._data(this,"__className__")||"")})},hasClass:function(e){var t=" "+e+" ",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(X," ").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=b.isFunction(e),this.each(function(n){var o,a=b(this);1===this.nodeType&&(o=i?e.call(this,n,a.val()):e,null==o?o="":"number"==typeof o?o+="":b.isArray(o)&&(o=b.map(o,function(e){return null==e?"":e+""})),r=b.valHooks[this.type]||b.valHooks[this.nodeName.toLowerCase()],r&&"set"in r&&r.set(this,o,"value")!==t||(this.value=o))});if(o)return r=b.valHooks[o.type]||b.valHooks[o.nodeName.toLowerCase()],r&&"get"in r&&(n=r.get(o,"value"))!==t?n:(n=o.value,"string"==typeof n?n.replace(U,""):null==n?"":n)}}}),b.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o="select-one"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,u=0>i?s:o?i:0;for(;s>u;u++)if(n=r[u],!(!n.selected&&u!==i||(b.support.optDisabled?n.disabled:null!==n.getAttribute("disabled"))||n.parentNode.disabled&&b.nodeName(n.parentNode,"optgroup"))){if(t=b(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n=b.makeArray(t);return b(e).find("option").each(function(){this.selected=b.inArray(b(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attr:function(e,n,r){var o,a,s,u=e.nodeType;if(e&&3!==u&&8!==u&&2!==u)return typeof e.getAttribute===i?b.prop(e,n,r):(a=1!==u||!b.isXMLDoc(e),a&&(n=n.toLowerCase(),o=b.attrHooks[n]||(J.test(n)?z:I)),r===t?o&&a&&"get"in o&&null!==(s=o.get(e,n))?s:(typeof e.getAttribute!==i&&(s=e.getAttribute(n)),null==s?t:s):null!==r?o&&a&&"set"in o&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+""),r):(b.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(w);if(o&&1===e.nodeType)while(n=o[i++])r=b.propFix[n]||n,J.test(n)?!Q&&G.test(n)?e[b.camelCase("default-"+n)]=e[r]=!1:e[r]=!1:b.attr(e,n,""),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!b.support.radioValue&&"radio"===t&&b.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!b.isXMLDoc(e),a&&(n=b.propFix[n]||n,o=b.propHooks[n]),r!==t?o&&"set"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&"get"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode("tabindex");return n&&n.specified?parseInt(n.value,10):V.test(e.nodeName)||Y.test(e.nodeName)&&e.href?0:t}}}}),z={get:function(e,n){var r=b.prop(e,n),i="boolean"==typeof r&&e.getAttribute(n),o="boolean"==typeof r?K&&Q?null!=i:G.test(n)?e[b.camelCase("default-"+n)]:!!i:e.getAttributeNode(n);return o&&o.value!==!1?n.toLowerCase():t},set:function(e,t,n){return t===!1?b.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&b.propFix[n]||n,n):e[b.camelCase("default-"+n)]=e[n]=!0,n}},K&&Q||(b.attrHooks.value={get:function(e,n){var r=e.getAttributeNode(n);return b.nodeName(e,"input")?e.defaultValue:r&&r.specified?r.value:t},set:function(e,n,r){return b.nodeName(e,"input")?(e.defaultValue=n,t):I&&I.set(e,n,r)}}),Q||(I=b.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&("id"===n||"name"===n||"coords"===n?""!==r.value:r.specified)?r.value:t},set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+="","value"===r||n===e.getAttribute(r)?n:t}},b.attrHooks.contenteditable={get:I.get,set:function(e,t,n){I.set(e,""===t?!1:t,n)}},b.each(["width","height"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{set:function(e,r){return""===r?(e.setAttribute(n,"auto"),r):t}})})),b.support.hrefNormalized||(b.each(["href","src","width","height"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return null==r?t:r}})}),b.each(["href","src"],function(e,t){b.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}})),b.support.style||(b.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+""}}),b.support.optSelected||(b.propHooks.selected=b.extend(b.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),b.support.enctype||(b.propFix.enctype="encoding"),b.support.checkOn||b.each(["radio","checkbox"],function(){b.valHooks[this]={get:function(e){return null===e.getAttribute("value")?"on":e.value}}}),b.each(["radio","checkbox"],function(){b.valHooks[this]=b.extend(b.valHooks[this],{set:function(e,n){return b.isArray(n)?e.checked=b.inArray(b(e).val(),n)>=0:t}})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\.(.+)|)$/;function it(){return!0}function ot(){return!1}b.event={global:{},add:function(e,n,r,o,a){var s,u,l,c,p,f,d,h,g,m,y,v=b._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=b.guid++),(u=v.events)||(u=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof b===i||e&&b.event.triggered===e.type?t:b.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||"").match(w)||[""],l=n.length;while(l--)s=rt.exec(n[l])||[],g=y=s[1],m=(s[2]||"").split(".").sort(),p=b.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=b.event.special[g]||{},d=b.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&b.expr.match.needsContext.test(a),namespace:m.join(".")},c),(h=u[g])||(h=u[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent("on"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),b.event.global[g]=!0;e=null}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,p,f,d,h,g,m=b.hasData(e)&&b._data(e);if(m&&(c=m.events)){t=(t||"").match(w)||[""],l=t.length;while(l--)if(s=rt.exec(t[l])||[],d=g=s[1],h=(s[2]||"").split(".").sort(),d){p=b.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),u=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&("**"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));u&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||b.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)b.event.remove(e,d+t[l],n,r,!0);b.isEmptyObject(c)&&(delete m.handle,b._removeData(e,"events"))}},trigger:function(n,r,i,a){var s,u,l,c,p,f,d,h=[i||o],g=y.call(n,"type")?n.type:n,m=y.call(n,"namespace")?n.namespace.split("."):[];if(l=f=i=i||o,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+b.event.triggered)&&(g.indexOf(".")>=0&&(m=g.split("."),g=m.shift(),m.sort()),u=0>g.indexOf(":")&&"on"+g,n=n[b.expando]?n:new b.Event(g,"object"==typeof n&&n),n.isTrigger=!0,n.namespace=m.join("."),n.namespace_re=n.namespace?RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:b.makeArray(r,[n]),p=b.event.special[g]||{},a||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!a&&!p.noBubble&&!b.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(l=l.parentNode);l;l=l.parentNode)h.push(l),f=l;f===(i.ownerDocument||o)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((l=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(b._data(l,"events")||{})[n.type]&&b._data(l,"handle"),s&&s.apply(l,r),s=u&&l[u],s&&b.acceptData(l)&&s.apply&&s.apply(l,r)===!1&&n.preventDefault();if(n.type=g,!(a||n.isDefaultPrevented()||p._default&&p._default.apply(i.ownerDocument,r)!==!1||"click"===g&&b.nodeName(i,"a")||!b.acceptData(i)||!u||!i[g]||b.isWindow(i))){f=i[u],f&&(i[u]=null),b.event.triggered=g;try{i[g]()}catch(v){}b.event.triggered=t,f&&(i[u]=f)}return n.result}},dispatch:function(e){e=b.event.fix(e);var n,r,i,o,a,s=[],u=h.call(arguments),l=(b._data(this,"events")||{})[e.type]||[],c=b.event.special[e.type]||{};if(u[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=b.event.handlers.call(this,e,l),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((b.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,u),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],u=n.delegateCount,l=e.target;if(u&&l.nodeType&&(!e.button||"click"!==e.type))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==e.type)){for(o=[],a=0;u>a;a++)i=n[a],r=i.selector+" ",o[r]===t&&(o[r]=i.needsContext?b(r,this).index(l)>=0:b.find(r,this,null,[l]).length),o[r]&&o.push(i);o.length&&s.push({elem:l,handlers:o})}return n.length>u&&s.push({elem:this,handlers:n.slice(u)}),s},fix:function(e){if(e[b.expando])return e;var t,n,r,i=e.type,a=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new b.Event(a),t=r.length;while(t--)n=r[t],e[n]=a[n];return e.target||(e.target=a.srcElement||o),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,a):e},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,i,a,s=n.button,u=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||o,a=i.documentElement,r=i.body,e.pageX=n.clientX+(a&&a.scrollLeft||r&&r.scrollLeft||0)-(a&&a.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(a&&a.scrollTop||r&&r.scrollTop||0)-(a&&a.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&u&&(e.relatedTarget=u===e.target?n.toElement:u),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},click:{trigger:function(){return b.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):t}},focus:{trigger:function(){if(this!==o.activeElement&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:function(){return this===o.activeElement&&this.blur?(this.blur(),!1):t},delegateType:"focusout"},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=b.extend(new b.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?b.event.trigger(i,null,t):b.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},b.removeEvent=o.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},b.Event=function(e,n){return this instanceof b.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&b.extend(this,n),this.timeStamp=e&&e.timeStamp||b.now(),this[b.expando]=!0,t):new b.Event(e,n)},b.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},b.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){b.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;
+return(!i||i!==r&&!b.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),b.support.submitBubbles||(b.event.special.submit={setup:function(){return b.nodeName(this,"form")?!1:(b.event.add(this,"click._submit keypress._submit",function(e){var n=e.target,r=b.nodeName(n,"input")||b.nodeName(n,"button")?n.form:t;r&&!b._data(r,"submitBubbles")&&(b.event.add(r,"submit._submit",function(e){e._submit_bubble=!0}),b._data(r,"submitBubbles",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&b.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){return b.nodeName(this,"form")?!1:(b.event.remove(this,"._submit"),t)}}),b.support.changeBubbles||(b.event.special.change={setup:function(){return Z.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(b.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._just_changed=!0)}),b.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),b.event.simulate("change",this,e,!0)})),!1):(b.event.add(this,"beforeactivate._change",function(e){var t=e.target;Z.test(t.nodeName)&&!b._data(t,"changeBubbles")&&(b.event.add(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTrigger||b.event.simulate("change",this.parentNode,e,!0)}),b._data(t,"changeBubbles",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||"radio"!==n.type&&"checkbox"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return b.event.remove(this,"._change"),!Z.test(this.nodeName)}}),b.support.focusinBubbles||b.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){b.event.simulate(t,e.target,b.event.fix(e),!0)};b.event.special[t]={setup:function(){0===n++&&o.addEventListener(e,r,!0)},teardown:function(){0===--n&&o.removeEventListener(e,r,!0)}}}),b.fn.extend({on:function(e,n,r,i,o){var a,s;if("object"==typeof e){"string"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&("string"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return b().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=b.guid++)),this.each(function(){b.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,b(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||"function"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){b.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},trigger:function(e,t){return this.each(function(){b.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?b.event.trigger(e,n,r,!0):t}}),function(e,t){var n,r,i,o,a,s,u,l,c,p,f,d,h,g,m,y,v,x="sizzle"+-new Date,w=e.document,T={},N=0,C=0,k=it(),E=it(),S=it(),A=typeof t,j=1<<31,D=[],L=D.pop,H=D.push,q=D.slice,M=D.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},_="[\\x20\\t\\r\\n\\f]",F="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=F.replace("w","w#"),B="([*^$|!~]?=)",P="\\["+_+"*("+F+")"+_+"*(?:"+B+_+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+O+")|)|)"+_+"*\\]",R=":("+F+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+P.replace(3,8)+")*)|.*)\\)|)",W=RegExp("^"+_+"+|((?:^|[^\\\\])(?:\\\\.)*)"+_+"+$","g"),$=RegExp("^"+_+"*,"+_+"*"),I=RegExp("^"+_+"*([\\x20\\t\\r\\n\\f>+~])"+_+"*"),z=RegExp(R),X=RegExp("^"+O+"$"),U={ID:RegExp("^#("+F+")"),CLASS:RegExp("^\\.("+F+")"),NAME:RegExp("^\\[name=['\"]?("+F+")['\"]?\\]"),TAG:RegExp("^("+F.replace("w","w*")+")"),ATTR:RegExp("^"+P),PSEUDO:RegExp("^"+R),CHILD:RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+_+"*(even|odd|(([+-]|)(\\d*)n|)"+_+"*(?:([+-]|)"+_+"*(\\d+)|))"+_+"*\\)|)","i"),needsContext:RegExp("^"+_+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+_+"*((?:-\\d)?\\d*)"+_+"*\\)|)(?=[^-]|$)","i")},V=/[\x20\t\r\n\f]*[+~]/,Y=/^[^{]+\{\s*\[native code/,J=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,G=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,K=/'|\\/g,Z=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,et=/\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g,tt=function(e,t){var n="0x"+t-65536;return n!==n?t:0>n?String.fromCharCode(n+65536):String.fromCharCode(55296|n>>10,56320|1023&n)};try{q.call(w.documentElement.childNodes,0)[0].nodeType}catch(nt){q=function(e){var t,n=[];while(t=this[e++])n.push(t);return n}}function rt(e){return Y.test(e+"")}function it(){var e,t=[];return e=function(n,r){return t.push(n+=" ")>i.cacheLength&&delete e[t.shift()],e[n]=r}}function ot(e){return e[x]=!0,e}function at(e){var t=p.createElement("div");try{return e(t)}catch(n){return!1}finally{t=null}}function st(e,t,n,r){var i,o,a,s,u,l,f,g,m,v;if((t?t.ownerDocument||t:w)!==p&&c(t),t=t||p,n=n||[],!e||"string"!=typeof e)return n;if(1!==(s=t.nodeType)&&9!==s)return[];if(!d&&!r){if(i=J.exec(e))if(a=i[1]){if(9===s){if(o=t.getElementById(a),!o||!o.parentNode)return n;if(o.id===a)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(a))&&y(t,o)&&o.id===a)return n.push(o),n}else{if(i[2])return H.apply(n,q.call(t.getElementsByTagName(e),0)),n;if((a=i[3])&&T.getByClassName&&t.getElementsByClassName)return H.apply(n,q.call(t.getElementsByClassName(a),0)),n}if(T.qsa&&!h.test(e)){if(f=!0,g=x,m=t,v=9===s&&e,1===s&&"object"!==t.nodeName.toLowerCase()){l=ft(e),(f=t.getAttribute("id"))?g=f.replace(K,"\\$&"):t.setAttribute("id",g),g="[id='"+g+"'] ",u=l.length;while(u--)l[u]=g+dt(l[u]);m=V.test(e)&&t.parentNode||t,v=l.join(",")}if(v)try{return H.apply(n,q.call(m.querySelectorAll(v),0)),n}catch(b){}finally{f||t.removeAttribute("id")}}}return wt(e.replace(W,"$1"),t,n,r)}a=st.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},c=st.setDocument=function(e){var n=e?e.ownerDocument||e:w;return n!==p&&9===n.nodeType&&n.documentElement?(p=n,f=n.documentElement,d=a(n),T.tagNameNoComments=at(function(e){return e.appendChild(n.createComment("")),!e.getElementsByTagName("*").length}),T.attributes=at(function(e){e.innerHTML="<select></select>";var t=typeof e.lastChild.getAttribute("multiple");return"boolean"!==t&&"string"!==t}),T.getByClassName=at(function(e){return e.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",e.getElementsByClassName&&e.getElementsByClassName("e").length?(e.lastChild.className="e",2===e.getElementsByClassName("e").length):!1}),T.getByName=at(function(e){e.id=x+0,e.innerHTML="<a name='"+x+"'></a><div name='"+x+"'></div>",f.insertBefore(e,f.firstChild);var t=n.getElementsByName&&n.getElementsByName(x).length===2+n.getElementsByName(x+0).length;return T.getIdNotName=!n.getElementById(x),f.removeChild(e),t}),i.attrHandle=at(function(e){return e.innerHTML="<a href='#'></a>",e.firstChild&&typeof e.firstChild.getAttribute!==A&&"#"===e.firstChild.getAttribute("href")})?{}:{href:function(e){return e.getAttribute("href",2)},type:function(e){return e.getAttribute("type")}},T.getIdNotName?(i.find.ID=function(e,t){if(typeof t.getElementById!==A&&!d){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){return e.getAttribute("id")===t}}):(i.find.ID=function(e,n){if(typeof n.getElementById!==A&&!d){var r=n.getElementById(e);return r?r.id===e||typeof r.getAttributeNode!==A&&r.getAttributeNode("id").value===e?[r]:t:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){var n=typeof e.getAttributeNode!==A&&e.getAttributeNode("id");return n&&n.value===t}}),i.find.TAG=T.tagNameNoComments?function(e,n){return typeof n.getElementsByTagName!==A?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},i.find.NAME=T.getByName&&function(e,n){return typeof n.getElementsByName!==A?n.getElementsByName(name):t},i.find.CLASS=T.getByClassName&&function(e,n){return typeof n.getElementsByClassName===A||d?t:n.getElementsByClassName(e)},g=[],h=[":focus"],(T.qsa=rt(n.querySelectorAll))&&(at(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||h.push("\\["+_+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),e.querySelectorAll(":checked").length||h.push(":checked")}),at(function(e){e.innerHTML="<input type='hidden' i=''/>",e.querySelectorAll("[i^='']").length&&h.push("[*^$]="+_+"*(?:\"\"|'')"),e.querySelectorAll(":enabled").length||h.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),h.push(",.*:")})),(T.matchesSelector=rt(m=f.matchesSelector||f.mozMatchesSelector||f.webkitMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&at(function(e){T.disconnectedMatch=m.call(e,"div"),m.call(e,"[s!='']:x"),g.push("!=",R)}),h=RegExp(h.join("|")),g=RegExp(g.join("|")),y=rt(f.contains)||f.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},v=f.compareDocumentPosition?function(e,t){var r;return e===t?(u=!0,0):(r=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t))?1&r||e.parentNode&&11===e.parentNode.nodeType?e===n||y(w,e)?-1:t===n||y(w,t)?1:0:4&r?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return u=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:0;if(o===a)return ut(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?ut(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},u=!1,[0,0].sort(v),T.detectDuplicates=u,p):p},st.matches=function(e,t){return st(e,null,null,t)},st.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&c(e),t=t.replace(Z,"='$1']"),!(!T.matchesSelector||d||g&&g.test(t)||h.test(t)))try{var n=m.call(e,t);if(n||T.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(r){}return st(t,p,null,[e]).length>0},st.contains=function(e,t){return(e.ownerDocument||e)!==p&&c(e),y(e,t)},st.attr=function(e,t){var n;return(e.ownerDocument||e)!==p&&c(e),d||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):d||T.attributes?e.getAttribute(t):((n=e.getAttributeNode(t))||e.getAttribute(t))&&e[t]===!0?t:n&&n.specified?n.value:null},st.error=function(e){throw Error("Syntax error, unrecognized expression: "+e)},st.uniqueSort=function(e){var t,n=[],r=1,i=0;if(u=!T.detectDuplicates,e.sort(v),u){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e};function ut(e,t){var n=t&&e,r=n&&(~t.sourceIndex||j)-(~e.sourceIndex||j);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function lt(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function ct(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function pt(e){return ot(function(t){return t=+t,ot(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}o=st.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=o(t);return n},i=st.selectors={cacheLength:50,createPseudo:ot,match:U,find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(et,tt),e[3]=(e[4]||e[5]||"").replace(et,tt),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||st.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&st.error(e[0]),e},PSEUDO:function(e){var t,n=!e[5]&&e[2];return U.CHILD.test(e[0])?null:(e[4]?e[2]=e[4]:n&&z.test(n)&&(t=ft(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){return"*"===e?function(){return!0}:(e=e.replace(et,tt).toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[e+" "];return t||(t=RegExp("(^|"+_+")"+e+"("+_+"|$)"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==A&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r){var i=st.attr(r,e);return null==i?"!="===t:t?(i+="","="===t?i===n:"!="===t?i!==n:"^="===t?n&&0===i.indexOf(n):"*="===t?n&&i.indexOf(n)>-1:"$="===t?n&&i.slice(-n.length)===n:"~="===t?(" "+i+" ").indexOf(n)>-1:"|="===t?i===n||i.slice(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,p,f,d,h,g=o!==a?"nextSibling":"previousSibling",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!u&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g="only"===e&&!h&&"nextSibling"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[x]||(m[x]={}),l=c[e]||[],d=l[0]===N&&l[1],f=l[0]===N&&l[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[N,d,f];break}}else if(v&&(l=(t[x]||(t[x]={}))[e])&&l[0]===N)f=l[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[x]||(p[x]={}))[e]=[N,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||st.error("unsupported pseudo: "+e);return r[x]?r(t):r.length>1?(n=[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowerCase())?ot(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=M.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:ot(function(e){var t=[],n=[],r=s(e.replace(W,"$1"));return r[x]?ot(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:ot(function(e){return function(t){return st(e,t).length>0}}),contains:ot(function(e){return function(t){return(t.textContent||t.innerText||o(t)).indexOf(e)>-1}}),lang:ot(function(e){return X.test(e||"")||st.error("unsupported lang: "+e),e=e.replace(et,tt).toLowerCase(),function(t){var n;do if(n=d?t.getAttribute("xml:lang")||t.getAttribute("lang"):t.lang)return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>"@"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!i.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return G.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||t.toLowerCase()===e.type)},first:pt(function(){return[0]}),last:pt(function(e,t){return[t-1]}),eq:pt(function(e,t,n){return[0>n?n+t:n]}),even:pt(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:pt(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:pt(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:pt(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}};for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[n]=lt(n);for(n in{submit:!0,reset:!0})i.pseudos[n]=ct(n);function ft(e,t){var n,r,o,a,s,u,l,c=E[e+" "];if(c)return t?0:c.slice(0);s=e,u=[],l=i.preFilter;while(s){(!n||(r=$.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),u.push(o=[])),n=!1,(r=I.exec(s))&&(n=r.shift(),o.push({value:n,type:r[0].replace(W," ")}),s=s.slice(n.length));for(a in i.filter)!(r=U[a].exec(s))||l[a]&&!(r=l[a](r))||(n=r.shift(),o.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?st.error(e):E(e,u).slice(0)}function dt(e){var t=0,n=e.length,r="";for(;n>t;t++)r+=e[t].value;return r}function ht(e,t,n){var i=t.dir,o=n&&"parentNode"===i,a=C++;return t.first?function(t,n,r){while(t=t[i])if(1===t.nodeType||o)return e(t,n,r)}:function(t,n,s){var u,l,c,p=N+" "+a;if(s){while(t=t[i])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[i])if(1===t.nodeType||o)if(c=t[x]||(t[x]={}),(l=c[i])&&l[0]===p){if((u=l[1])===!0||u===r)return u===!0}else if(l=c[i]=[p],l[1]=e(t,n,s)||r,l[1]===!0)return!0}}function gt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function mt(e,t,n,r,i){var o,a=[],s=0,u=e.length,l=null!=t;for(;u>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),l&&t.push(s));return a}function yt(e,t,n,r,i,o){return r&&!r[x]&&(r=yt(r)),i&&!i[x]&&(i=yt(i,o)),ot(function(o,a,s,u){var l,c,p,f=[],d=[],h=a.length,g=o||xt(t||"*",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:mt(g,f,e,s,u),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,u),r){l=mt(y,d),r(l,[],s,u),c=l.length;while(c--)(p=l[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){l=[],c=y.length;while(c--)(p=y[c])&&l.push(m[c]=p);i(null,y=[],l,u)}c=y.length;while(c--)(p=y[c])&&(l=i?M.call(o,p):f[c])>-1&&(o[l]=!(a[l]=p))}}else y=mt(y===a?y.splice(h,y.length):y),i?i(null,a,y,u):H.apply(a,y)})}function vt(e){var t,n,r,o=e.length,a=i.relative[e[0].type],s=a||i.relative[" "],u=a?1:0,c=ht(function(e){return e===t},s,!0),p=ht(function(e){return M.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==l)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;o>u;u++)if(n=i.relative[e[u].type])f=[ht(gt(f),n)];else{if(n=i.filter[e[u].type].apply(null,e[u].matches),n[x]){for(r=++u;o>r;r++)if(i.relative[e[r].type])break;return yt(u>1&&gt(f),u>1&&dt(e.slice(0,u-1)).replace(W,"$1"),n,r>u&&vt(e.slice(u,r)),o>r&&vt(e=e.slice(r)),o>r&&dt(e))}f.push(n)}return gt(f)}function bt(e,t){var n=0,o=t.length>0,a=e.length>0,s=function(s,u,c,f,d){var h,g,m,y=[],v=0,b="0",x=s&&[],w=null!=d,T=l,C=s||a&&i.find.TAG("*",d&&u.parentNode||u),k=N+=null==T?1:Math.random()||.1;for(w&&(l=u!==p&&u,r=n);null!=(h=C[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,u,c)){f.push(h);break}w&&(N=k,r=++n)}o&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,o&&b!==v){g=0;while(m=t[g++])m(x,y,u,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=L.call(f));y=mt(y)}H.apply(f,y),w&&!s&&y.length>0&&v+t.length>1&&st.uniqueSort(f)}return w&&(N=k,l=T),x};return o?ot(s):s}s=st.compile=function(e,t){var n,r=[],i=[],o=S[e+" "];if(!o){t||(t=ft(e)),n=t.length;while(n--)o=vt(t[n]),o[x]?r.push(o):i.push(o);o=S(e,bt(i,r))}return o};function xt(e,t,n){var r=0,i=t.length;for(;i>r;r++)st(e,t[r],n);return n}function wt(e,t,n,r){var o,a,u,l,c,p=ft(e);if(!r&&1===p.length){if(a=p[0]=p[0].slice(0),a.length>2&&"ID"===(u=a[0]).type&&9===t.nodeType&&!d&&i.relative[a[1].type]){if(t=i.find.ID(u.matches[0].replace(et,tt),t)[0],!t)return n;e=e.slice(a.shift().value.length)}o=U.needsContext.test(e)?0:a.length;while(o--){if(u=a[o],i.relative[l=u.type])break;if((c=i.find[l])&&(r=c(u.matches[0].replace(et,tt),V.test(a[0].type)&&t.parentNode||t))){if(a.splice(o,1),e=r.length&&dt(a),!e)return H.apply(n,q.call(r,0)),n;break}}}return s(e,p)(r,t,d,n,V.test(e)),n}i.pseudos.nth=i.pseudos.eq;function Tt(){}i.filters=Tt.prototype=i.pseudos,i.setFilters=new Tt,c(),st.attr=b.attr,b.find=st,b.expr=st.selectors,b.expr[":"]=b.expr.pseudos,b.unique=st.uniqueSort,b.text=st.getText,b.isXMLDoc=st.isXML,b.contains=st.contains}(e);var at=/Until$/,st=/^(?:parents|prev(?:Until|All))/,ut=/^.[^:#\[\.,]*$/,lt=b.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};b.fn.extend({find:function(e){var t,n,r,i=this.length;if("string"!=typeof e)return r=this,this.pushStack(b(e).filter(function(){for(t=0;i>t;t++)if(b.contains(r[t],this))return!0}));for(n=[],t=0;i>t;t++)b.find(e,this[t],n);return n=this.pushStack(i>1?b.unique(n):n),n.selector=(this.selector?this.selector+" ":"")+e,n},has:function(e){var t,n=b(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(b.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1))},filter:function(e){return this.pushStack(ft(this,e,!0))},is:function(e){return!!e&&("string"==typeof e?lt.test(e)?b(e,this.context).index(this[0])>=0:b.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,o=[],a=lt.test(e)||"string"!=typeof e?b(e,t||this.context):0;for(;i>r;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&11!==n.nodeType){if(a?a.index(n)>-1:b.find.matchesSelector(n,e)){o.push(n);break}n=n.parentNode}}return this.pushStack(o.length>1?b.unique(o):o)},index:function(e){return e?"string"==typeof e?b.inArray(this[0],b(e)):b.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n="string"==typeof e?b(e,t):b.makeArray(e&&e.nodeType?[e]:e),r=b.merge(this.get(),n);return this.pushStack(b.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),b.fn.andSelf=b.fn.addBack;function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}b.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return b.dir(e,"parentNode")},parentsUntil:function(e,t,n){return b.dir(e,"parentNode",n)},next:function(e){return pt(e,"nextSibling")},prev:function(e){return pt(e,"previousSibling")},nextAll:function(e){return b.dir(e,"nextSibling")},prevAll:function(e){return b.dir(e,"previousSibling")},nextUntil:function(e,t,n){return b.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return b.dir(e,"previousSibling",n)},siblings:function(e){return b.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return b.sibling(e.firstChild)},contents:function(e){return b.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:b.merge([],e.childNodes)}},function(e,t){b.fn[e]=function(n,r){var i=b.map(this,t,n);return at.test(e)||(r=n),r&&"string"==typeof r&&(i=b.filter(r,i)),i=this.length>1&&!ct[e]?b.unique(i):i,this.length>1&&st.test(e)&&(i=i.reverse()),this.pushStack(i)}}),b.extend({filter:function(e,t,n){return n&&(e=":not("+e+")"),1===t.length?b.find.matchesSelector(t[0],e)?[t[0]]:[]:b.find.matches(e,t)},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!b(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(t=t||0,b.isFunction(t))return b.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return b.grep(e,function(e){return e===t===n});if("string"==typeof t){var r=b.grep(e,function(e){return 1===e.nodeType});if(ut.test(t))return b.filter(t,r,!n);t=b.filter(t,r)}return b.grep(e,function(e){return b.inArray(e,t)>=0===n})}function dt(e){var t=ht.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",gt=/ jQuery\d+="(?:null|\d+)"/g,mt=RegExp("<(?:"+ht+")[\\s/>]","i"),yt=/^\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bt=/<([\w:]+)/,xt=/<tbody/i,wt=/<|&#?\w+;/,Tt=/<(?:script|style|link)/i,Nt=/^(?:checkbox|radio)$/i,Ct=/checked\s*(?:[^=]|=\s*.checked.)/i,kt=/^$|\/(?:java|ecma)script/i,Et=/^true\/(.*)/,St=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,At={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:b.support.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},jt=dt(o),Dt=jt.appendChild(o.createElement("div"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,b.fn.extend({text:function(e){return b.access(this,function(e){return e===t?b.text(this):this.empty().append((this[0]&&this[0].ownerDocument||o).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(b.isFunction(e))return this.each(function(t){b(this).wrapAll(e.call(this,t))});if(this[0]){var t=b(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return b.isFunction(e)?this.each(function(t){b(this).wrapInner(e.call(this,t))}):this.each(function(){var t=b(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=b.isFunction(e);return this.each(function(n){b(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){b.nodeName(this,"body")||b(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.insertBefore(e,this.firstChild)})},before:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=0;for(;null!=(n=this[r]);r++)(!e||b.filter(e,[n]).length>0)&&(t||1!==n.nodeType||b.cleanData(Ot(n)),n.parentNode&&(t&&b.contains(n.ownerDocument,n)&&Mt(Ot(n,"script")),n.parentNode.removeChild(n)));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&b.cleanData(Ot(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&b.nodeName(e,"select")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return b.clone(this,e,t)})},html:function(e){return b.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,""):t;if(!("string"!=typeof e||Tt.test(e)||!b.support.htmlSerialize&&mt.test(e)||!b.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||["",""])[1].toLowerCase()])){e=e.replace(vt,"<$1></$2>");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(b.cleanData(Ot(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){var t=b.isFunction(e);return t||"string"==typeof e||(e=b(e).not(this).detach()),this.domManip([e],!0,function(e){var t=this.nextSibling,n=this.parentNode;n&&(b(this).remove(),n.insertBefore(e,t))})},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=f.apply([],e);var i,o,a,s,u,l,c=0,p=this.length,d=this,h=p-1,g=e[0],m=b.isFunction(g);if(m||!(1>=p||"string"!=typeof g||b.support.checkClone)&&Ct.test(g))return this.each(function(i){var o=d.eq(i);m&&(e[0]=g.call(this,i,n?o.html():t)),o.domManip(e,n,r)});if(p&&(l=b.buildFragment(e,this[0].ownerDocument,!1,this),i=l.firstChild,1===l.childNodes.length&&(l=i),i)){for(n=n&&b.nodeName(i,"tr"),s=b.map(Ot(l,"script"),Ht),a=s.length;p>c;c++)o=l,c!==h&&(o=b.clone(o,!0,!0),a&&b.merge(s,Ot(o,"script"))),r.call(n&&b.nodeName(this[c],"table")?Lt(this[c],"tbody"):this[c],o,c);if(a)for(u=s[s.length-1].ownerDocument,b.map(s,qt),c=0;a>c;c++)o=s[c],kt.test(o.type||"")&&!b._data(o,"globalEval")&&b.contains(u,o)&&(o.src?b.ajax({url:o.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):b.globalEval((o.text||o.textContent||o.innerHTML||"").replace(St,"")));l=i=null}return this}});function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function Ht(e){var t=e.getAttributeNode("type");return e.type=(t&&t.specified)+"/"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function Mt(e,t){var n,r=0;for(;null!=(n=e[r]);r++)b._data(n,"globalEval",!t||b._data(t[r],"globalEval"))}function _t(e,t){if(1===t.nodeType&&b.hasData(e)){var n,r,i,o=b._data(e),a=b._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)b.event.add(t,n,s[n][r])}a.data&&(a.data=b.extend({},a.data))}}function Ft(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!b.support.noCloneEvent&&t[b.expando]){i=b._data(t);for(r in i.events)b.removeEvent(t,r,i.handle);t.removeAttribute(b.expando)}"script"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):"object"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),b.support.html5Clone&&e.innerHTML&&!b.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===n&&Nt.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===n?t.defaultSelected=t.selected=e.defaultSelected:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}}b.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){b.fn[e]=function(e){var n,r=0,i=[],o=b(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),b(o[r])[t](n),d.apply(i,n.get());return this.pushStack(i)}});function Ot(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||"*"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||"*"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||b.nodeName(o,n)?s.push(o):b.merge(s,Ot(o,n));return n===t||n&&b.nodeName(e,n)?b.merge([e],s):s}function Bt(e){Nt.test(e.type)&&(e.defaultChecked=e.checked)}b.extend({clone:function(e,t,n){var r,i,o,a,s,u=b.contains(e.ownerDocument,e);if(b.support.html5Clone||b.isXMLDoc(e)||!mt.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(b.support.noCloneEvent&&b.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||b.isXMLDoc(e)))for(r=Ot(o),s=Ot(e),a=0;null!=(i=s[a]);++a)r[a]&&Ft(i,r[a]);if(t)if(n)for(s=s||Ot(e),r=r||Ot(o),a=0;null!=(i=s[a]);a++)_t(i,r[a]);else _t(e,o);return r=Ot(o,"script"),r.length>0&&Mt(r,!u&&Ot(e,"script")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,u,l,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if("object"===b.type(o))b.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement("div")),u=(bt.exec(o)||["",""])[1].toLowerCase(),c=At[u]||At._default,s.innerHTML=c[1]+o.replace(vt,"<$1></$2>")+c[2],i=c[0];while(i--)s=s.lastChild;if(!b.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!b.support.tbody){o="table"!==u||xt.test(o)?"<table>"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)b.nodeName(l=o.childNodes[i],"tbody")&&!l.childNodes.length&&o.removeChild(l)
+}b.merge(d,s.childNodes),s.textContent="";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),b.support.appendChecked||b.grep(Ot(d,"input"),Bt),h=0;while(o=d[h++])if((!r||-1===b.inArray(o,r))&&(a=b.contains(o.ownerDocument,o),s=Ot(f.appendChild(o),"script"),a&&Mt(s),n)){i=0;while(o=s[i++])kt.test(o.type||"")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,u=b.expando,l=b.cache,p=b.support.deleteExpando,f=b.event.special;for(;null!=(n=e[s]);s++)if((t||b.acceptData(n))&&(o=n[u],a=o&&l[o])){if(a.events)for(r in a.events)f[r]?b.event.remove(n,r):b.removeEvent(n,r,a.handle);l[o]&&(delete l[o],p?delete n[u]:typeof n.removeAttribute!==i?n.removeAttribute(u):n[u]=null,c.push(o))}}});var Pt,Rt,Wt,$t=/alpha\([^)]*\)/i,It=/opacity\s*=\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp("^("+x+")(.*)$","i"),Yt=RegExp("^("+x+")(?!px)[a-z%]+$","i"),Jt=RegExp("^([+-])=("+x+")","i"),Gt={BODY:"block"},Qt={position:"absolute",visibility:"hidden",display:"block"},Kt={letterSpacing:0,fontWeight:400},Zt=["Top","Right","Bottom","Left"],en=["Webkit","O","Moz","ms"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,"none"===b.css(e,"display")||!b.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=b._data(r,"olddisplay"),n=r.style.display,t?(o[a]||"none"!==n||(r.style.display=""),""===r.style.display&&nn(r)&&(o[a]=b._data(r,"olddisplay",un(r.nodeName)))):o[a]||(i=nn(r),(n&&"none"!==n||!i)&&b._data(r,"olddisplay",i?n:b.css(r,"display"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?o[a]||"":"none"));return e}b.fn.extend({css:function(e,n){return b.access(this,function(e,n,r){var i,o,a={},s=0;if(b.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=b.css(e,n[s],!1,o);return a}return r!==t?b.style(e,n,r):b.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){var t="boolean"==typeof e;return this.each(function(){(t?e:nn(this))?b(this).show():b(this).hide()})}}),b.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":b.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,u=b.camelCase(n),l=e.style;if(n=b.cssProps[u]||(b.cssProps[u]=tn(l,u)),s=b.cssHooks[n]||b.cssHooks[u],r===t)return s&&"get"in s&&(o=s.get(e,!1,i))!==t?o:l[n];if(a=typeof r,"string"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(b.css(e,n)),a="number"),!(null==r||"number"===a&&isNaN(r)||("number"!==a||b.cssNumber[u]||(r+="px"),b.support.clearCloneStyle||""!==r||0!==n.indexOf("background")||(l[n]="inherit"),s&&"set"in s&&(r=s.set(e,r,i))===t)))try{l[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,u=b.camelCase(n);return n=b.cssProps[u]||(b.cssProps[u]=tn(e.style,u)),s=b.cssHooks[n]||b.cssHooks[u],s&&"get"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),"normal"===a&&n in Kt&&(a=Kt[n]),""===r||r?(o=parseFloat(a),r===!0||b.isNumeric(o)?o||0:a):a},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s.getPropertyValue(n)||s[n]:t,l=e.style;return s&&(""!==u||b.contains(e.ownerDocument,e)||(u=b.style(e,n)),Yt.test(u)&&Ut.test(n)&&(i=l.width,o=l.minWidth,a=l.maxWidth,l.minWidth=l.maxWidth=l.width=u,u=s.width,l.width=i,l.minWidth=o,l.maxWidth=a)),u}):o.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s[n]:t,l=e.style;return null==u&&l&&l[n]&&(u=l[n]),Yt.test(u)&&!zt.test(n)&&(i=l.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),l.left="fontSize"===n?"1em":u,u=l.pixelLeft+"px",l.left=i,a&&(o.left=a)),""===u?"auto":u});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function an(e,t,n,r,i){var o=n===(r?"border":"content")?4:"width"===t?1:0,a=0;for(;4>o;o+=2)"margin"===n&&(a+=b.css(e,n+Zt[o],!0,i)),r?("content"===n&&(a-=b.css(e,"padding"+Zt[o],!0,i)),"margin"!==n&&(a-=b.css(e,"border"+Zt[o]+"Width",!0,i))):(a+=b.css(e,"padding"+Zt[o],!0,i),"padding"!==n&&(a+=b.css(e,"border"+Zt[o]+"Width",!0,i)));return a}function sn(e,t,n){var r=!0,i="width"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=b.support.boxSizing&&"border-box"===b.css(e,"boxSizing",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(b.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?"border":"content"),r,o)+"px"}function un(e){var t=o,n=Gt[e];return n||(n=ln(e,t),"none"!==n&&n||(Pt=(Pt||b("<iframe frameborder='0' width='0' height='0'/>").css("cssText","display:block !important")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write("<!doctype html><html><body>"),t.close(),n=ln(e,t),Pt.detach()),Gt[e]=n),n}function ln(e,t){var n=b(t.createElement(e)).appendTo(t.body),r=b.css(n[0],"display");return n.remove(),r}b.each(["height","width"],function(e,n){b.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(b.css(e,"display"))?b.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,b.support.boxSizing&&"border-box"===b.css(e,"boxSizing",!1,i),i):0)}}}),b.support.opacity||(b.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=b.isNumeric(t)?"alpha(opacity="+100*t+")":"",o=r&&r.filter||n.filter||"";n.zoom=1,(t>=1||""===t)&&""===b.trim(o.replace($t,""))&&n.removeAttribute&&(n.removeAttribute("filter"),""===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+" "+i)}}),b(function(){b.support.reliableMarginRight||(b.cssHooks.marginRight={get:function(e,n){return n?b.swap(e,{display:"inline-block"},Wt,[e,"marginRight"]):t}}),!b.support.pixelPosition&&b.fn.position&&b.each(["top","left"],function(e,n){b.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?b(e).position()[n]+"px":r):t}}})}),b.expr&&b.expr.filters&&(b.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!b.support.reliableHiddenOffsets&&"none"===(e.style&&e.style.display||b.css(e,"display"))},b.expr.filters.visible=function(e){return!b.expr.filters.hidden(e)}),b.each({margin:"",padding:"",border:"Width"},function(e,t){b.cssHooks[e+t]={expand:function(n){var r=0,i={},o="string"==typeof n?n.split(" "):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(b.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\[\]$/,fn=/\r?\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;b.fn.extend({serialize:function(){return b.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=b.prop(this,"elements");return e?b.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!b(this).is(":disabled")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Nt.test(e))}).map(function(e,t){var n=b(this).val();return null==n?null:b.isArray(n)?b.map(n,function(e){return{name:t.name,value:e.replace(fn,"\r\n")}}):{name:t.name,value:n.replace(fn,"\r\n")}}).get()}}),b.param=function(e,n){var r,i=[],o=function(e,t){t=b.isFunction(t)?t():null==t?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(n===t&&(n=b.ajaxSettings&&b.ajaxSettings.traditional),b.isArray(e)||e.jquery&&!b.isPlainObject(e))b.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join("&").replace(cn,"+")};function gn(e,t,n,r){var i;if(b.isArray(t))b.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+"["+("object"==typeof i?t:"")+"]",i,n,r)});else if(n||"object"!==b.type(t))r(e,t);else for(i in t)gn(e+"["+i+"]",t[i],n,r)}b.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){b.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),b.fn.hover=function(e,t){return this.mouseenter(e).mouseleave(t||e)};var mn,yn,vn=b.now(),bn=/\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Nn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Cn=/^(?:GET|HEAD)$/,kn=/^\/\//,En=/^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,Sn=b.fn.load,An={},jn={},Dn="*/".concat("*");try{yn=a.href}catch(Ln){yn=o.createElement("a"),yn.href="",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,i=0,o=t.toLowerCase().match(w)||[];if(b.isFunction(n))while(r=o[i++])"+"===r[0]?(r=r.slice(1)||"*",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(u){var l;return o[u]=!0,b.each(e[u]||[],function(e,u){var c=u(n,r,i);return"string"!=typeof c||a||o[c]?a?!(l=c):t:(n.dataTypes.unshift(c),s(c),!1)}),l}return s(n.dataTypes[0])||!o["*"]&&s("*")}function Mn(e,n){var r,i,o=b.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&b.extend(!0,e,r),e}b.fn.load=function(e,n,r){if("string"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,u=e.indexOf(" ");return u>=0&&(i=e.slice(u,e.length),e=e.slice(0,u)),b.isFunction(n)?(r=n,n=t):n&&"object"==typeof n&&(a="POST"),s.length>0&&b.ajax({url:e,type:a,dataType:"html",data:n}).done(function(e){o=arguments,s.html(i?b("<div>").append(b.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},b.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){b.fn[t]=function(e){return this.on(t,e)}}),b.each(["get","post"],function(e,n){b[n]=function(e,r,i,o){return b.isFunction(r)&&(o=o||i,i=r,r=t),b.ajax({url:e,type:n,dataType:o,data:r,success:i})}}),b.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:"GET",isLocal:Nn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Dn,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":e.String,"text html":!0,"text json":b.parseJSON,"text xml":b.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Mn(Mn(e,b.ajaxSettings),t):Mn(b.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){"object"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,u,l,c,p=b.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?b(f):b.event,h=b.Deferred(),g=b.Callbacks("once memory"),m=p.statusCode||{},y={},v={},x=0,T="canceled",N={readyState:0,getResponseHeader:function(e){var t;if(2===x){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===x?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return x||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return x||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>x)for(t in e)m[t]=[m[t],e[t]];else N.always(e[N.status]);return this},abort:function(e){var t=e||T;return l&&l.abort(t),k(0,t),this}};if(h.promise(N).complete=g.add,N.success=N.done,N.error=N.fail,p.url=((e||p.url||yn)+"").replace(xn,"").replace(kn,mn[1]+"//"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=b.trim(p.dataType||"*").toLowerCase().match(w)||[""],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||("http:"===r[1]?80:443))==(mn[3]||("http:"===mn[1]?80:443)))),p.data&&p.processData&&"string"!=typeof p.data&&(p.data=b.param(p.data,p.traditional)),qn(An,p,n,N),2===x)return N;u=p.global,u&&0===b.active++&&b.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Cn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?"&":"?")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,"$1_="+vn++):o+(bn.test(o)?"&":"?")+"_="+vn++)),p.ifModified&&(b.lastModified[o]&&N.setRequestHeader("If-Modified-Since",b.lastModified[o]),b.etag[o]&&N.setRequestHeader("If-None-Match",b.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&N.setRequestHeader("Content-Type",p.contentType),N.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Dn+"; q=0.01":""):p.accepts["*"]);for(i in p.headers)N.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,N,p)===!1||2===x))return N.abort();T="abort";for(i in{success:1,error:1,complete:1})N[i](p[i]);if(l=qn(jn,p,n,N)){N.readyState=1,u&&d.trigger("ajaxSend",[N,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){N.abort("timeout")},p.timeout));try{x=1,l.send(y,k)}catch(C){if(!(2>x))throw C;k(-1,C)}}else k(-1,"No Transport");function k(e,n,r,i){var c,y,v,w,T,C=n;2!==x&&(x=2,s&&clearTimeout(s),l=t,a=i||"",N.readyState=e>0?4:0,r&&(w=_n(p,N,r)),e>=200&&300>e||304===e?(p.ifModified&&(T=N.getResponseHeader("Last-Modified"),T&&(b.lastModified[o]=T),T=N.getResponseHeader("etag"),T&&(b.etag[o]=T)),204===e?(c=!0,C="nocontent"):304===e?(c=!0,C="notmodified"):(c=Fn(p,w),C=c.state,y=c.data,v=c.error,c=!v)):(v=C,(e||!C)&&(C="error",0>e&&(e=0))),N.status=e,N.statusText=(n||C)+"",c?h.resolveWith(f,[y,C,N]):h.rejectWith(f,[N,C,v]),N.statusCode(m),m=t,u&&d.trigger(c?"ajaxSuccess":"ajaxError",[N,p,c?y:v]),g.fireWith(f,[N,C]),u&&(d.trigger("ajaxComplete",[N,p]),--b.active||b.event.trigger("ajaxStop")))}return N},getScript:function(e,n){return b.get(e,t,n,"script")},getJSON:function(e,t,n){return b.get(e,t,n,"json")}});function _n(e,n,r){var i,o,a,s,u=e.contents,l=e.dataTypes,c=e.responseFields;for(s in c)s in r&&(n[c[s]]=r[s]);while("*"===l[0])l.shift(),o===t&&(o=e.mimeType||n.getResponseHeader("Content-Type"));if(o)for(s in u)if(u[s]&&u[s].test(o)){l.unshift(s);break}if(l[0]in r)a=l[0];else{for(s in r){if(!l[0]||e.converters[s+" "+l[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==l[0]&&l.unshift(a),r[a]):t}function Fn(e,t){var n,r,i,o,a={},s=0,u=e.dataTypes.slice(),l=u[0];if(e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u[1])for(i in e.converters)a[i.toLowerCase()]=e.converters[i];for(;r=u[++s];)if("*"!==r){if("*"!==l&&l!==r){if(i=a[l+" "+r]||a["* "+r],!i)for(n in a)if(o=n.split(" "),o[1]===r&&(i=a[l+" "+o[0]]||a["* "+o[0]])){i===!0?i=a[n]:a[n]!==!0&&(r=o[0],u.splice(s--,0,r));break}if(i!==!0)if(i&&e["throws"])t=i(t);else try{t=i(t)}catch(c){return{state:"parsererror",error:i?c:"No conversion from "+l+" to "+r}}}l=r}return{state:"success",data:t}}b.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return b.globalEval(e),e}}}),b.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),b.ajaxTransport("script",function(e){if(e.crossDomain){var n,r=o.head||b("head")[0]||o.documentElement;return{send:function(t,i){n=o.createElement("script"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,"success"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var On=[],Bn=/(=)\?(?=&|$)|\?\?/;b.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=On.pop()||b.expando+"_"+vn++;return this[e]=!0,e}}),b.ajaxPrefilter("json jsonp",function(n,r,i){var o,a,s,u=n.jsonp!==!1&&(Bn.test(n.url)?"url":"string"==typeof n.data&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Bn.test(n.data)&&"data");return u||"jsonp"===n.dataTypes[0]?(o=n.jsonpCallback=b.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,u?n[u]=n[u].replace(Bn,"$1"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?"&":"?")+n.jsonp+"="+o),n.converters["script json"]=function(){return s||b.error(o+" was not called"),s[0]},n.dataTypes[0]="json",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,On.push(o)),s&&b.isFunction(a)&&a(s[0]),s=a=t}),"script"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}b.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=b.ajaxSettings.xhr(),b.support.cors=!!Rn&&"withCredentials"in Rn,Rn=b.support.ajax=!!Rn,Rn&&b.ajaxTransport(function(n){if(!n.crossDomain||b.support.cors){var r;return{send:function(i,o){var a,s,u=n.xhr();if(n.username?u.open(n.type,n.url,n.async,n.username,n.password):u.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)u[s]=n.xhrFields[s];n.mimeType&&u.overrideMimeType&&u.overrideMimeType(n.mimeType),n.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest");try{for(s in i)u.setRequestHeader(s,i[s])}catch(l){}u.send(n.hasContent&&n.data||null),r=function(e,i){var s,l,c,p;try{if(r&&(i||4===u.readyState))if(r=t,a&&(u.onreadystatechange=b.noop,$n&&delete Pn[a]),i)4!==u.readyState&&u.abort();else{p={},s=u.status,l=u.getAllResponseHeaders(),"string"==typeof u.responseText&&(p.text=u.responseText);try{c=u.statusText}catch(f){c=""}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,l)},n.async?4===u.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},b(e).unload($n)),Pn[a]=r),u.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp("^(?:([+-])=|)("+x+")([a-z%]*)$","i"),Jn=/queueHooks$/,Gn=[nr],Qn={"*":[function(e,t){var n,r,i=this.createTween(e,t),o=Yn.exec(t),a=i.cur(),s=+a||0,u=1,l=20;if(o){if(n=+o[2],r=o[3]||(b.cssNumber[e]?"":"px"),"px"!==r&&s){s=b.css(i.elem,e,!0)||n||1;do u=u||".5",s/=u,b.style(i.elem,e,s+r);while(u!==(u=i.cur()/a)&&1!==u&&--l)}i.unit=r,i.start=s,i.end=o[1]?s+(o[1]+1)*n:n}return i}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=b.now()}function Zn(e,t){b.each(t,function(t,n){var r=(Qn[t]||[]).concat(Qn["*"]),i=0,o=r.length;for(;o>i;i++)if(r[i].call(e,t,n))return})}function er(e,t,n){var r,i,o=0,a=Gn.length,s=b.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,l.startTime+l.duration-t),r=n/l.duration||0,o=1-r,a=0,u=l.tweens.length;for(;u>a;a++)l.tweens[a].run(o);return s.notifyWith(e,[l,o,n]),1>o&&u?n:(s.resolveWith(e,[l]),!1)},l=s.promise({elem:e,props:b.extend({},t),opts:b.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=b.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)l.tweens[n].run(1);return t?s.resolveWith(e,[l,t]):s.rejectWith(e,[l,t]),this}}),c=l.props;for(tr(c,l.opts.specialEasing);a>o;o++)if(r=Gn[o].call(l,e,c,l.opts))return r;return Zn(l,c),b.isFunction(l.opts.start)&&l.opts.start.call(e,l),b.fx.timer(b.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function tr(e,t){var n,r,i,o,a;for(i in e)if(r=b.camelCase(i),o=t[r],n=e[i],b.isArray(n)&&(o=n[1],n=e[i]=n[0]),i!==r&&(e[r]=n,delete e[i]),a=b.cssHooks[r],a&&"expand"in a){n=a.expand(n),delete e[r];for(i in n)i in e||(e[i]=n[i],t[i]=o)}else t[r]=o}b.Animation=b.extend(er,{tweener:function(e,t){b.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,u,l,c,p,f=this,d=e.style,h={},g=[],m=e.nodeType&&nn(e);n.queue||(c=b._queueHooks(e,"fx"),null==c.unqueued&&(c.unqueued=0,p=c.empty.fire,c.empty.fire=function(){c.unqueued||p()}),c.unqueued++,f.always(function(){f.always(function(){c.unqueued--,b.queue(e,"fx").length||c.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],"inline"===b.css(e,"display")&&"none"===b.css(e,"float")&&(b.support.inlineBlockNeedsLayout&&"inline"!==un(e.nodeName)?d.zoom=1:d.display="inline-block")),n.overflow&&(d.overflow="hidden",b.support.shrinkWrapBlocks||f.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}));for(i in t)if(a=t[i],Vn.exec(a)){if(delete t[i],u=u||"toggle"===a,a===(m?"hide":"show"))continue;g.push(i)}if(o=g.length){s=b._data(e,"fxshow")||b._data(e,"fxshow",{}),"hidden"in s&&(m=s.hidden),u&&(s.hidden=!m),m?b(e).show():f.done(function(){b(e).hide()}),f.done(function(){var t;b._removeData(e,"fxshow");for(t in h)b.style(e,t,h[t])});for(i=0;o>i;i++)r=g[i],l=f.createTween(r,m?s[r]:0),h[r]=s[r]||b.style(e,r),r in s||(s[r]=l.start,m&&(l.end=l.start,l.start="width"===r||"height"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}b.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(b.cssNumber[n]?"":"px")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?b.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=b.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){b.fx.step[e.prop]?b.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[b.cssProps[e.prop]]||b.cssHooks[e.prop])?b.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},b.each(["toggle","show","hide"],function(e,t){var n=b.fn[t];b.fn[t]=function(e,r,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),b.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=b.isEmptyObject(e),o=b.speed(t,n,r),a=function(){var t=er(this,b.extend({},e),o);a.finish=function(){t.stop(!0)},(i||b._data(this,"finish"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return"string"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=null!=e&&e+"queueHooks",o=b.timers,a=b._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&b.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=b._data(this),r=n[e+"queue"],i=n[e+"queueHooks"],o=b.timers,a=r?r.length:0;for(n.finish=!0,b.queue(this,e,[]),i&&i.cur&&i.cur.finish&&i.cur.finish.call(this),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}b.each({slideDown:ir("show"),slideUp:ir("hide"),slideToggle:ir("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){b.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),b.speed=function(e,t,n){var r=e&&"object"==typeof e?b.extend({},e):{complete:n||!n&&t||b.isFunction(e)&&e,duration:e,easing:n&&t||t&&!b.isFunction(t)&&t};return r.duration=b.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in b.fx.speeds?b.fx.speeds[r.duration]:b.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue="fx"),r.old=r.complete,r.complete=function(){b.isFunction(r.old)&&r.old.call(this),r.queue&&b.dequeue(this,r.queue)},r},b.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},b.timers=[],b.fx=rr.prototype.init,b.fx.tick=function(){var e,n=b.timers,r=0;for(Xn=b.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||b.fx.stop(),Xn=t},b.fx.timer=function(e){e()&&b.timers.push(e)&&b.fx.start()},b.fx.interval=13,b.fx.start=function(){Un||(Un=setInterval(b.fx.tick,b.fx.interval))},b.fx.stop=function(){clearInterval(Un),Un=null},b.fx.speeds={slow:600,fast:200,_default:400},b.fx.step={},b.expr&&b.expr.filters&&(b.expr.filters.animated=function(e){return b.grep(b.timers,function(t){return e===t.elem}).length}),b.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){b.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,b.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},b.offset={setOffset:function(e,t,n){var r=b.css(e,"position");"static"===r&&(e.style.position="relative");var i=b(e),o=i.offset(),a=b.css(e,"top"),s=b.css(e,"left"),u=("absolute"===r||"fixed"===r)&&b.inArray("auto",[a,s])>-1,l={},c={},p,f;u?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),b.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(l.top=t.top-o.top+p),null!=t.left&&(l.left=t.left-o.left+f),"using"in t?t.using.call(e,l):i.css(l)}},b.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return"fixed"===b.css(r,"position")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),b.nodeName(e[0],"html")||(n=e.offset()),n.top+=b.css(e[0],"borderTopWidth",!0),n.left+=b.css(e[0],"borderLeftWidth",!0)),{top:t.top-n.top-b.css(r,"marginTop",!0),left:t.left-n.left-b.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||o.documentElement;while(e&&!b.nodeName(e,"html")&&"static"===b.css(e,"position"))e=e.offsetParent;return e||o.documentElement})}}),b.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var r=/Y/.test(n);b.fn[e]=function(i){return b.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?b(a).scrollLeft():o,r?o:b(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return b.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}b.each({Height:"height",Width:"width"},function(e,n){b.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,i){b.fn[i]=function(i,o){var a=arguments.length&&(r||"boolean"!=typeof i),s=r||(i===!0||o===!0?"margin":"border");return b.access(this,function(n,r,i){var o;return b.isWindow(n)?n.document.documentElement["client"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body["scroll"+e],o["scroll"+e],n.body["offset"+e],o["offset"+e],o["client"+e])):i===t?b.css(n,r,s):b.style(n,r,i,s)},n,a?i:t,a,null)}})}),e.jQuery=e.$=b,"function"==typeof define&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return b})})(window);
\ No newline at end of file
diff --git a/src/js/jquery.mousewheel.js b/src/js/libs/jquery.mousewheel.js
similarity index 100%
rename from src/js/jquery.mousewheel.js
rename to src/js/libs/jquery.mousewheel.js
diff --git a/src/js/json2.js b/src/js/libs/json2.js
similarity index 100%
rename from src/js/json2.js
rename to src/js/libs/json2.js
diff --git a/src/vignettes.html b/src/vignettes.html
new file mode 100644
index 0000000..f6b3b72
--- /dev/null
+++ b/src/vignettes.html
@@ -0,0 +1,78 @@
+<!DOCTYPE html>
+<html>
+    <head>
+        <meta charset="utf-8">
+        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
+        <title></title>
+        <meta name="description" content="">
+        <meta name="viewport" content="width=device-width">
+        
+        <script src="js/libs/jquery-1.9.1.min.js"></script>
+        <script src="js/libs/jquery.mousewheel.min.js"></script>
+        <script src="js/libs/RequestAnimationFrame.js"></script>
+        <script src="js/libs/Stats.js"></script>
+        
+        <script src="js/libs/healpix.min.js"></script>
+        <script src="js/libs/astro/astroMath.js"></script>
+        <script src="js/libs/astro/projection.js"></script>
+        <script src="js/libs/astro/coo.js"></script>
+        
+
+        
+        <script src="js/CooConversion.js"></script>
+        <script src="js/Sesame.js"></script>
+        <script src="js/HealpixCache.js"></script>
+        <script src="js/Utils.js"></script>
+        <script src="js/AladinUtils.js"></script>
+        <script src="js/ProjectionEnum.js"></script>
+        <script src="js/CooFrameEnum.js"></script>
+        <script src="js/Downloader.js"></script>
+        <script src="js/Source.js"></script>
+        <script src="js/Catalog.js"></script>
+        <script src="js/Tile.js"></script>
+        <script src="js/TileBuffer.js"></script>
+        <script src="js/HpxImageSurvey.js"></script>
+        <script src="js/HealpixGrid.js"></script>
+        <script src="js/Location.js"></script>
+        <script src="js/View.js"></script>
+        <script src="js/Aladin.js"></script>
+        
+        <script>
+        $(document).ready(function() {
+            
+            var aladin = new Aladin($('#divAladin')[0]);
+            
+            var curSurveyIdx = 0;
+            var surveys = ["DSS Color", "2MASS Color", "DSS Red", "SDSS DR7 Color", "GALEX AIS Color", "XMM-Newton"];
+            
+            aladin.setImageSurvey(HpxImageSurvey.getSurveyFromName(surveys[0]));
+            
+            $(document).keydown(function(e){
+                if (e.keyCode == 39) {
+                	curSurveyIdx = (curSurveyIdx+1) % surveys.length;
+                	aladin.setImageSurvey(HpxImageSurvey.getSurveyFromName(surveys[curSurveyIdx]));
+                   return false;
+                }
+                
+                if (e.keyCode == 37) {
+                    curSurveyIdx = (curSurveyIdx-1) % surveys.length;
+                    if (curSurveyIdx==-1) {
+                    	curSurveyIdx = surveys.length - 1;
+                    }
+                    aladin.setImageSurvey(HpxImageSurvey.getSurveyFromName(surveys[curSurveyIdx]));
+                   return false;
+                }
+            });
+            
+        });
+        </script>
+    </head>
+    <body>
+       <noscript><h2>Javascript is needed !</h2></noscript>
+            
+    
+            <div id="divAladin" style="width: 300px; height: 300px; border: 1px solid;"></div>
+            Use left/right arrows to change survey
+    </body>
+</html>
+    
